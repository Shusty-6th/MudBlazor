// NOTE: this file is autogenerated. Any changes will be overwritten!
namespace MudBlazor.Docs.Models
{
    public static partial class Snippets
    {

public const string UsageExample = @"<MudText Typo=""Typo.h6"">MudBlazor is @Text</MudText>
<MudButton Variant=""Variant.Filled"" Color=""Color.Primary"" OnClick=""ButtonOnClick"">@ButtonText</MudButton>

@code {
    public string Text { get; set; } = ""????"";
    public string ButtonText { get; set; } = ""Click Me"";
    public int ButtonClicked { get; set; }

    void ButtonOnClick()
    {
        ButtonClicked += 1;
        Text = $""Awesome x {ButtonClicked}"";
        ButtonText = ""Click Me Again"";
    }
}";

public const string AlertDenseExample = @"<MudAlert Severity=""Severity.Normal"" Dense=""true"">Dense Default</MudAlert>
<MudAlert Severity=""Severity.Info"" Dense=""true"">Dense Info</MudAlert>
<MudAlert Severity=""Severity.Success"" Dense=""true"">Dense Success</MudAlert>
<MudAlert Severity=""Severity.Warning"" Dense=""true"">Dense Warning</MudAlert>
<MudAlert Severity=""Severity.Error"" Dense=""true"">Dense Error</MudAlert>

<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Outlined"" Dense=""true"">Dense Default</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Outlined"" Dense=""true"">Dense Info</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Outlined"" Dense=""true"">Dense Success</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Outlined"" Dense=""true"">Dense Warning</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Outlined"" Dense=""true"">Dense Error</MudAlert>

<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Filled"" Dense=""true"">Dense Default</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Filled"" Dense=""true"">Dense Info</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Filled"" Dense=""true"">Dense Success</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Filled"" Dense=""true"">Dense Warning</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Filled"" Dense=""true"">Dense Error</MudAlert>";

public const string AlertDenseFilledExample = @"<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Filled"" Dense=""true"">Dense Default</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Filled"" Dense=""true"">Dense Info</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Filled"" Dense=""true"">Dense Success</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Filled"" Dense=""true"">Dense Warning</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Filled"" Dense=""true"">Dense Error</MudAlert>";

public const string AlertDenseOutlinedExample = @"<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Outlined"" Dense=""true"">Dense Default</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Outlined"" Dense=""true"">Dense Info</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Outlined"" Dense=""true"">Dense Success</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Outlined"" Dense=""true"">Dense Warning</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Outlined"" Dense=""true"">Dense Error</MudAlert>";

public const string AlertDenseTextExample = @"<MudAlert Severity=""Severity.Normal"" Dense=""true"">Dense Default</MudAlert>
<MudAlert Severity=""Severity.Info"" Dense=""true"">Dense Info</MudAlert>
<MudAlert Severity=""Severity.Success"" Dense=""true"">Dense Success</MudAlert>
<MudAlert Severity=""Severity.Warning"" Dense=""true"">Dense Warning</MudAlert>
<MudAlert Severity=""Severity.Error"" Dense=""true"">Dense Error</MudAlert>";

public const string AlertElevationExample = @"<MudGrid Class=""mt-6"">
    <MudItem md=""12"">
        <MudAlert Severity=""Severity.Normal"" Variant=""Variant.Filled"" Elevation=""@elevation"">
            Elevated Alert, or is it?
        </MudAlert>
    </MudItem>
    <MudItem md=""12"">
        <MudSlider @bind-Value=""elevation"" Min=""0"" Max=""24"" Class=""my-4"">Elevation</MudSlider>
    </MudItem>
</MudGrid>

@code {
    public int elevation = 1;
}";

public const string AlertFilledExample = @"<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Filled"">
    The reactor type is RBMK-1000
</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Filled"">
    The reactor was fired up successfully
</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Filled"">
    The reactor is running at optimum temperature
</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Filled"">
    The reactor is running at optimum temperature
</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Filled"">
    The reactor temperature exceeds the optimal range
</MudAlert>";

public const string AlertNoIconExample = @"<MudAlert Severity=""Severity.Normal"" NoIcon=""true"">Default No Icon</MudAlert>
<MudAlert Severity=""Severity.Info"" NoIcon=""true"">Info No Icon</MudAlert>
<MudAlert Severity=""Severity.Success"" NoIcon=""true"">Success No Icon</MudAlert>
<MudAlert Severity=""Severity.Warning"" NoIcon=""true"">Warning No Icon</MudAlert>
<MudAlert Severity=""Severity.Error"" NoIcon=""true"">Error No Icon</MudAlert>

<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Outlined"" NoIcon=""true"">Icon Default No</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Outlined"" NoIcon=""true"">Info No Icon</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Outlined"" NoIcon=""true"">Success No Icon</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Outlined"" NoIcon=""true"">Warning No Icon</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Outlined"" NoIcon=""true"">Error No Icon</MudAlert>

<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Filled"" NoIcon=""true"">Default No Icon</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Filled"" NoIcon=""true"">Info No Icon</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Filled"" NoIcon=""true"">Success No Icon</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Filled"" NoIcon=""true"">Warning No Icon</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Filled"" NoIcon=""true"">Error No Icon</MudAlert>";

public const string AlertNoIconFilledExample = @"<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Filled"" NoIcon=""true"">Default No Icon</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Filled"" NoIcon=""true"">Info No Icon</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Filled"" NoIcon=""true"">Success No Icon</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Filled"" NoIcon=""true"">Warning No Icon</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Filled"" NoIcon=""true"">Error No Icon</MudAlert>";

public const string AlertNoIconOutlinedExample = @"<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Outlined"" NoIcon=""true"">Icon Default No</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Outlined"" NoIcon=""true"">Info No Icon</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Outlined"" NoIcon=""true"">Success No Icon</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Outlined"" NoIcon=""true"">Warning No Icon</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Outlined"" NoIcon=""true"">Error No Icon</MudAlert>";

public const string AlertNoIconTextExample = @"<MudAlert Severity=""Severity.Normal"" NoIcon=""true"">Default No Icon</MudAlert>
<MudAlert Severity=""Severity.Info"" NoIcon=""true"">Info No Icon</MudAlert>
<MudAlert Severity=""Severity.Success"" NoIcon=""true"">Success No Icon</MudAlert>
<MudAlert Severity=""Severity.Warning"" NoIcon=""true"">Warning No Icon</MudAlert>
<MudAlert Severity=""Severity.Error"" NoIcon=""true"">Error No Icon</MudAlert>";

public const string AlertOutlinedExample = @"<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Outlined"">
    The reactor type is RBMK-1000
</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Outlined"">
    The reactor was fired up successfully
</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Outlined"">
    The reactor is running at optimum temperature
</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Outlined"">
    The reactor is running at optimum temperature
</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Outlined"">
    The reactor temperature exceeds the optimal range
</MudAlert>";

public const string AlertSimpleExample = @"<MudAlert Severity=""Severity.Normal"">The reactor type is RBMK-1000</MudAlert>
<MudAlert Severity=""Severity.Info"">The reactor was fired up successfully</MudAlert>
<MudAlert Severity=""Severity.Success"">The reactor is running at optimum temperature</MudAlert>
<MudAlert Severity=""Severity.Warning"">The reactor is running at optimum temperature</MudAlert>
<MudAlert Severity=""Severity.Error"">The reactor temperature exceeds the optimal range</MudAlert>";

public const string AlertSquareExample = @"<MudAlert Severity=""Severity.Normal"" Square=""true"">Default Square</MudAlert>
<MudAlert Severity=""Severity.Info"" Square=""true"">Info Square</MudAlert>
<MudAlert Severity=""Severity.Success"" Square=""true"">Success Square</MudAlert>
<MudAlert Severity=""Severity.Warning"" Square=""true"">Warning Square</MudAlert>
<MudAlert Severity=""Severity.Error"" Square=""true"">Error Square</MudAlert>

<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Outlined"" Square=""true"">Default Square</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Outlined"" Square=""true"">Info Square</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Outlined"" Square=""true"">Success Square</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Outlined"" Square=""true"">Warning Square</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Outlined"" Square=""true"">Error Square</MudAlert>

<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Filled"" Square=""true"">Default Square</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Filled"" Square=""true"">Info Square</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Filled"" Square=""true"">Success Square</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Filled"" Square=""true"">Warning Square</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Filled"" Square=""true"">Error Square</MudAlert>";

public const string AlertSquareFilledExample = @"<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Filled"" Square=""true"">Default Square</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Filled"" Square=""true"">Info Square</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Filled"" Square=""true"">Success Square</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Filled"" Square=""true"">Warning Square</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Filled"" Square=""true"">Error Square</MudAlert>";

public const string AlertSquareOutlineExample = @"<MudAlert Severity=""Severity.Normal"" Variant=""Variant.Outlined"" Square=""true"">Default Square</MudAlert>
<MudAlert Severity=""Severity.Info"" Variant=""Variant.Outlined"" Square=""true"">Info Square</MudAlert>
<MudAlert Severity=""Severity.Success"" Variant=""Variant.Outlined"" Square=""true"">Success Square</MudAlert>
<MudAlert Severity=""Severity.Warning"" Variant=""Variant.Outlined"" Square=""true"">Warning Square</MudAlert>
<MudAlert Severity=""Severity.Error"" Variant=""Variant.Outlined"" Square=""true"">Error Square</MudAlert>";

public const string AlertSquareTextExample = @"<MudAlert Severity=""Severity.Normal"" Square=""true"">Default Square</MudAlert>
<MudAlert Severity=""Severity.Info"" Square=""true"">Info Square</MudAlert>
<MudAlert Severity=""Severity.Success"" Square=""true"">Success Square</MudAlert>
<MudAlert Severity=""Severity.Warning"" Square=""true"">Warning Square</MudAlert>
<MudAlert Severity=""Severity.Error"" Square=""true"">Error Square</MudAlert>";

public const string AppBarDenseExample = @"<MudAppBar Position=""Position.Static"" Dense=""true"">
    <MudIconButton Icon=""@Icons.Material.Menu"" Color=""Color.Inherit"" Edge=""Edge.Start"" />
    <MudAppBarSpacer />
    <MudIconButton Icon=""@Icons.Custom.GitHub"" Color=""Color.Inherit"" />
</MudAppBar>";

public const string AppBarElevationExample = @"<MudAppBar Position=""Position.Static"" Elevation=""0"">
    <MudIconButton Icon=""@Icons.Material.Menu"" Color=""Color.Inherit"" Edge=""Edge.Start"" />
    <MudAppBarSpacer />
    <MudIconButton Icon=""@Icons.Custom.GitHub"" Color=""Color.Inherit"" />
</MudAppBar>";

public const string AppBarSimpleExample = @"<MudAppBar Position=""Position.Static"">
    <MudIconButton Icon=""@Icons.Material.Menu"" Color=""Color.Inherit"" Edge=""Edge.Start"" />
    <MudAppBarSpacer />
    <MudIconButton Icon=""@Icons.Custom.GitHub"" Color=""Color.Inherit"" />
</MudAppBar>";

public const string AvatarIconExample = @"<MudAvatar>
    <MudIcon Icon=""@Icons.Material.AccessAlarm""/>
</MudAvatar>
<MudAvatar Color=""Color.Primary"">
    <MudIcon Icon=""@Icons.Material.Folder"" />
</MudAvatar>
<MudAvatar Color=""Color.Secondary"">
    <MudIcon Icon=""@Icons.Material.FormatListNumbered"" />
</MudAvatar>";

public const string AvatarImageExample = @"<MudAvatar Image=""_content/MudBlazor.Docs/images/mony.png"" />
<MudAvatar Image=""_content/MudBlazor.Docs/images/toiletvisit.png"" />";

public const string AvatarLetterExample = @"<MudAvatar>A</MudAvatar>
<MudAvatar Color=""Color.Primary"">B</MudAvatar>
<MudAvatar Color=""Color.Secondary"">AB</MudAvatar>";

public const string AvatarSizeExample = @"<MudAvatar Image=""_content/MudBlazor.Docs/images/mony.png"" Size=""Size.Small"" />
<MudAvatar Image=""_content/MudBlazor.Docs/images/mony.png"" Size=""Size.Medium"" />
<MudAvatar Image=""_content/MudBlazor.Docs/images/mony.png"" Size=""Size.Large"" />
<MudAvatar Image=""_content/MudBlazor.Docs/images/mony.png"" Style=""height:70px; width:70px;"" />";

public const string AvatarVariantsExample = @"<MudAvatar Square=""true"">
    N
</MudAvatar>
<MudAvatar Rounded=""true"" Color=""Color.Secondary"">
    <MudIcon Icon=""@Icons.Material.FormatListNumbered"" />
</MudAvatar>
<MudAvatar Color=""Color.Primary"">
    <MudIcon Icon=""@Icons.Material.Comment"" />
</MudAvatar>";

public const string ButtonCustomizedExample = @"<MudButton Variant=""Variant.Filled"" EndIcon=""@Icons.Material.ArrowDownward"" Style=""background-color: yellowgreen; color: white; width: 200px; height: 60px;"">
    Download Now
</MudButton>";

public const string ButtonElevationExample = @"<MudButton Variant=""Variant.Filled"" DisableElevation=""true"" Color=""Color.Primary"">Disable elevation</MudButton>";

public const string ButtonFilledExample = @"<MudButton Variant=""Variant.Filled"">Default</MudButton>
<MudButton Variant=""Variant.Filled"" Color=""Color.Primary"">Primary</MudButton>
<MudButton Variant=""Variant.Filled"" Color=""Color.Secondary"">Secondary</MudButton>
<MudButton Variant=""Variant.Filled"" Disabled=""true"">Disabled</MudButton>";

public const string ButtonIconLabelExample = @"<MudButton Variant=""Variant.Filled"" StartIcon=""@Icons.Material.Delete"" Color=""Color.Secondary"">Delete</MudButton>
<MudButton Variant=""Variant.Filled"" EndIcon=""@Icons.Material.Send"" Color=""Color.Primary"">Send</MudButton>
<MudButton Variant=""Variant.Filled"" StartIcon=""@Icons.Material.CloudUpload"">Upload</MudButton>
<MudButton Variant=""Variant.Filled"" StartIcon=""@Icons.Material.Mic"" Disabled=""true"">Talk</MudButton>
<MudButton Variant=""Variant.Filled"" StartIcon=""@Icons.Material.Save"" Color=""Color.Primary"" Size=""Size.Small"">Save</MudButton>
<MudButton Variant=""Variant.Filled"" StartIcon=""@Icons.Material.Save"" Color=""Color.Primary"" Size=""Size.Large"">Save</MudButton>";

public const string ButtonOutlinedExample = @"<MudButton Variant=""Variant.Outlined"">Default</MudButton>
<MudButton Variant=""Variant.Outlined"" Color=""Color.Primary"">Primary</MudButton>
<MudButton Variant=""Variant.Outlined"" Color=""Color.Secondary"">Secondary</MudButton>
<MudButton Variant=""Variant.Outlined"" Disabled=""true"">Disabled</MudButton>";

public const string ButtonSizeExample = @"<SectionContentRow>
    <MudButton Variant=""Variant.Text"" Size=""Size.Small"">Small</MudButton>
    <MudButton Variant=""Variant.Text"" Size=""Size.Medium"">Medium</MudButton>
    <MudButton Variant=""Variant.Text"" Size=""Size.Large"">Large</MudButton>
</SectionContentRow>
<SectionContentRow>
    <MudButton Variant=""Variant.Outlined"" Size=""Size.Small"" Color=""Color.Secondary"">Small</MudButton>
    <MudButton Variant=""Variant.Outlined"" Size=""Size.Medium"" Color=""Color.Secondary"">Medium</MudButton>
    <MudButton Variant=""Variant.Outlined"" Size=""Size.Large"" Color=""Color.Secondary"">Large</MudButton>
</SectionContentRow>
<SectionContentRow>
    <MudButton Variant=""Variant.Filled"" Size=""Size.Small"" Color=""Color.Primary"">Small</MudButton>
    <MudButton Variant=""Variant.Filled"" Size=""Size.Medium"" Color=""Color.Primary"">Medium</MudButton>
    <MudButton Variant=""Variant.Filled"" Size=""Size.Large"" Color=""Color.Primary"">Large</MudButton>
</SectionContentRow>
<SectionContentRow>
    <MudIconButton Icon=""@Icons.Material.Delete"" Size=""Size.Small""></MudIconButton>
    <MudIconButton Icon=""@Icons.Material.Delete"" Size=""Size.Medium""></MudIconButton>
    <MudIconButton Icon=""@Icons.Material.Delete"" Size=""Size.Large""></MudIconButton>
</SectionContentRow>";

public const string ButtonTextExample = @"<MudButton Variant=""Variant.Text"">Default</MudButton>
<MudButton Variant=""Variant.Text"" Color=""Color.Primary"">Primary</MudButton>
<MudButton Variant=""Variant.Text"" Color=""Color.Secondary"">Secondary</MudButton>
<MudButton Variant=""Variant.Text"" Disabled=""true"">Disabled</MudButton>";

public const string CardCombinedExample = @"<MudCard>
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudAvatar>I</MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo=""Typo.body1"">Istra Croatia</MudText>
            <MudText Typo=""Typo.body2"">Peninsula in Europe</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon=""@Icons.Material.Settings"" Color=""Color.Default"" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardMedia Image=""_content/MudBlazor.Docs/images/content-template-pilars.png"" Height=""250"" />
    <MudCardContent>
        <MudText Typo=""Typo.body2"">This photo was taken in a small village in Istra Croatia.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudIconButton Icon=""@Icons.Material.Favorite"" Color=""Color.Default"" />
        <MudIconButton Icon=""@Icons.Material.Share"" Color=""Color.Default"" />
    </MudCardActions>
</MudCard>";

public const string CardHeaderExample = @"<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo=""Typo.h6"">The Story Book</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon=""@Icons.Material.Settings"" Color=""Color.Inherit"" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
        <MudText>This day everything happend.</MudText>
        <MudText Typo=""Typo.body2"">The quick, brown fox jumps over a lazy dog.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant=""Variant.Text"">Read More</MudButton>
    </MudCardActions>
</MudCard>";

public const string CardMediaExample = @"<MudCard>
    <MudCardMedia Image=""_content/MudBlazor.Docs/images/content-template-door.png"" Height=""200"" />
    <MudCardContent>
        <MudText Typo=""Typo.h5"">Old Paint</MudText>
        <MudText Typo=""Typo.body2"">Old paint found on a stone house door.</MudText>
        <MudText Typo=""Typo.body2"">This photo was taken in a small village in Istra Croatia.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant=""Variant.Text"" Color=""Color.Primary"">Share</MudButton>
        <MudButton Variant=""Variant.Text"" Color=""Color.Primary"">Learn More</MudButton>
    </MudCardActions>
</MudCard>";

public const string CardOutlinedExample = @"<MudCard Outlined=""true"">
    <MudCardContent>
        <MudText>Story of the day</MudText>
        <MudText Typo=""Typo.body2"">The quick, brown fox jumps over a lazy dog.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant=""Variant.Text"">Learn More</MudButton>
    </MudCardActions>
</MudCard>";

public const string CardSimpleExample = @"<MudCard>
    <MudCardContent>
        <MudText>Story of the day</MudText>
        <MudText Typo=""Typo.body2"">The quick, brown fox jumps over a lazy dog.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant=""Variant.Text"">Learn More</MudButton>
    </MudCardActions>
</MudCard>";

public const string CheckboxBasicExample = @"<MudCheckBox @bind-Checked=""@Basic_CheckBox1""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Basic_CheckBox2"" Color=""Color.Primary""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Basic_CheckBox1"" Color=""Color.Secondary""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Basic_CheckBox1"" Disabled=""true""></MudCheckBox>

@code {
    public bool Basic_CheckBox1 { get; set; } = true;
    public bool Basic_CheckBox2 { get; set; } = false;
    public bool Basic_CheckBox3 { get; set; } = false;
}";

public const string CheckboxLabelExample = @"<MudCheckBox @bind-Checked=""@Label_CheckBox1"" Label=""Default""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Label_CheckBox2"" Label=""Primary"" Color=""Color.Primary""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Label_CheckBox3"" Label=""Secondary"" Color=""Color.Secondary""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Label_CheckBox1"" Disabled=""true"" Label=""Disabled""></MudCheckBox>

@code {
    public bool Label_CheckBox1 { get; set; } = true;
    public bool Label_CheckBox2 { get; set; } = false;
    public bool Label_CheckBox3 { get; set; } = false;
}";

public const string ContainedFixedExample = @"<MudPaper>
    <MudContainer Fixed=""true""></MudContainer>
</MudPaper>";

public const string ContainerFluidExample = @"<MudPaper>
    <MudContainer MaxWidth=""MaxWidth.Small""></MudContainer>
</MudPaper>";

public const string DatePickerBasicUsageExample = @"<MudDatePicker Label=""Picker in menu"" Value=""2020-10-19""/>
<MudDatePicker Label=""Only Calendar"" Value=""2020-10-19"" DisableToolbar=""true"" HelperText=""No header"" />
<MudDatePicker Label=""Picker in dialog"" HelperText=""Not implemented yet"" Value=""2020-10-19"" Disabled=""true"" />";

public const string DatePickerColorExample = @"<MudDatePicker PickerVariant=""PickerVariant.Static"" Color=""Color.Success"" Rounded=""true"" Value=""2020-10-19"" />
<MudDatePicker PickerVariant=""PickerVariant.Static"" Color=""Color.Secondary"" Rounded=""true"" Value=""2020-10-19"" />";

public const string DatePickerElevationExample = @"<MudDatePicker PickerVariant=""PickerVariant.Static"" Rounded=""true"" Elevation=""1"" Value=""2020-10-19"" />
<MudDatePicker PickerVariant=""PickerVariant.Static"" Rounded=""true"" Elevation=""12"" Value=""2020-10-19"" />";

public const string DatePickerStaticExample = @"<MudDatePicker PickerVariant=""PickerVariant.Static"" Value=""2020-10-19""/>
<MudDatePicker PickerVariant=""PickerVariant.Static"" Orientation=""Orientation.Landscape"" Value=""2020-10-19""/>";

public const string DatePickeViewsExample = @"<MudDatePicker Label=""Year"" OpenTo=""OpenTo.Year"" Value=""2020-10-19""/>
<MudDatePicker Label=""Month"" OpenTo=""OpenTo.Month"" Value=""2020-10-19"" />
<MudDatePicker Label=""Date""  Value=""2020-10-19"" />";

public const string DialogBodyScrollableExample = @"<MudDialog DisableSidePadding=""true"">
    <DialogContent>
        <MudContainer Style=""max-height: 300px; overflow-y: scroll"">
            <MudText Class=""mb-5"" Typo=""Typo.body1"">Copyright (c) 2020 - The MudBlazor Team and Contributors</MudText>
            @if (Loading)
            {
                <MudProgressCircular Indeterminate=""true""></MudProgressCircular>
            }
            else
            {
                <MudText Style=""white-space: pre-wrap;"">@LicenseText</MudText>
            }
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Color=""Color.Primary"" OnClick=""Ok"">Accept</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Loading = true;
        var bytes = await new WebClient().DownloadDataTaskAsync(new Uri(""https://raw.githubusercontent.com/Garderoben/MudBlazor/master/LICENSE""));
        LicenseText = Encoding.UTF8.GetString(bytes);
        Loading = false;
        await base.OnInitializedAsync();
    }

    string LicenseText;
    bool Loading = false;

    void Ok()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }
}";

public const string DialogDialogFormExample = @"<MudDialog>
    <DialogContent>
        <MudText Class=""mt-2"">Note: Database creation can take up to 30 minutes.</MudText>
        <MudText Class=""mb-2"">After database is created you will rescive a email to your cloud account.</MudText>
        <MudForm>
            <MudTextField Label=""Database name""></MudTextField>
            <MudTextField Label=""Database tags""></MudTextField>
            <MudSelect FullWidth=""true"" Label=""Resource Group"" ValueChanged=""@OnSelectedValue"">
                <MudSelectItem Value=""Prod"">Prod</MudSelectItem>
                <MudSelectItem Value=""Test"">Test</MudSelectItem>
            </MudSelect>
            <MudCheckBox Label=""Want to use SQL elastic pool?"" Color=""Color.Primary"" Class=""my-4""></MudCheckBox>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick=""Cancel"">Cancel</MudButton>
        <MudButton Color=""Color.Primary"" OnClick=""AddDatabase"">Add Database</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void AddDatabase() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

    private string ResourceGroup { get; set; }

    private void OnSelectedValue(string value)
    {
        ResourceGroup = value;
    }
}";

public const string DialogDialogOptionExample = @"<MudDialog >
    <DialogContent>
       <MudText Class=""my-6"">
           @Message
       </MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick=""Cancel"">Cancel</MudButton>
        <MudButton Color=""Color.Primary"" OnClick=""Submit"">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public string Message { get; set; }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

}";

public const string DialogDialogSimpleExample = @"<MudDialog DisableSidePadding=""true"" ClassContent=""demo-dialog-simple"">
    <DialogContent>
        <MudList Clickable=""true"">
            <MudListItem Avatar=""@Icons.Material.Person"" @onclick=""@(() => SelectUser(""notsocool@gmail.com""))"">
                coolusername@gmail.com
            </MudListItem>
            <MudListItem Avatar=""@Icons.Material.Person"" @onclick=""@(() => SelectUser(""notsocool@gmail.com""))"">
                    notsocool@gmail.com
            </MudListItem>
            <MudListItem Avatar=""@Icons.Custom.Radioactive"" AvatarClass=""s-t-a-l-k-e-r"" @onclick=""@(() => SelectUser(""strelok@gmail.com""))"">
                    strelok@gmail.com
            </MudListItem>
        </MudList>
    </DialogContent>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void SelectUser(string user)
    {
        MudDialog.Close(DialogResult.Ok(user));
    }
}";

public const string DialogFormExample = @"@inject IDialogService Dialog

<MudButton Variant=""Variant.Outlined"" Color=""Color.Primary"" @onclick=""OpenFormDialog"">Open Form Dialog</MudButton>

@code {

    void OpenFormDialog()
    {
        Dialog.Show<DialogDialogFormExample>(""Create SQL Database"");
    }

}";

public const string DialogOptionsExample = @"@inject IDialogService Dialog

<MudButton Variant=""Variant.Outlined"" Color=""Color.Primary"" @onclick=""OpenClodebuttonDialog"">With Close Button</MudButton>
<MudButton Variant=""Variant.Outlined"" Color=""Color.Secondary"" @onclick=""OpenBackDropDialog"">With No Backdrop click</MudButton>

@code {
    async Task OpenClodebuttonDialog()
    {
        var Options = new DialogOptions() { CloseButton = true };
        var Parameters = new DialogParameters();
        Parameters.Add(""Message"", ""This dialog has a close button that is set either globally or per dialog."");
        var userSelect = Dialog.Show<DialogDialogOptionExample>(""With close button"", Parameters, Options);
    }

    async Task OpenBackDropDialog()
    {
        var Options = new DialogOptions() { DisableBackdropClick = true };
        var Parameters = new DialogParameters();
        Parameters.Add(""Message"", ""This dialog has the backdrop click disabled and the user need to take an action within the dialog."");
        var userSelect = Dialog.Show<DialogDialogOptionExample>(""With no backdrop click"", Parameters, Options);
    }
}";

public const string DialogScrollableExample = @"@inject IDialogService Dialog

<MudButton Variant=""Variant.Outlined"" Color=""Color.Primary"" @onclick=""OpenSimpleDialog"">Scrollable Dialog</MudButton>

@code {
    bool HideSourceSimpleDialog = true;

    public void ShowSimpleDialogSource()
    {
        HideSourceSimpleDialog = !HideSourceSimpleDialog;
    }

    bool license_accepted = false;

    async Task OpenSimpleDialog()
    {
        var userSelect = Dialog.Show<DialogBodyScrollableExample>(""MudBlazor License"");
        var result = await userSelect.Result;

        if (!result.Cancelled)
        {
            license_accepted = (bool)(result.Data ?? false);
        }
    }
}";

public const string DialogSimpleExample = @"@inject IDialogService Dialog

<MudText Align=""Align.Center"" Typo=""Typo.subtitle1"">Selected User</MudText>
<MudText Align=""Align.Center"" Typo=""Typo.subtitle2"">@selectedUser</MudText>
<MudButton Variant=""Variant.Outlined"" Color=""Color.Primary"" @onclick=""OpenSimpleDialog"">Open Simple Dialog</MudButton>


@code {
    bool HideSourceSimpleDialog = true;

    public void ShowSimpleDialogSource()
    {
        HideSourceSimpleDialog = !HideSourceSimpleDialog;
    }


    string selectedUser = ""No user selected"";

    async Task OpenSimpleDialog()
    {
        var userSelect = Dialog.Show<DialogDialogSimpleExample>(""Choose Account"");
        var result = await userSelect.Result;

        if (!result.Cancelled)
        {
            selectedUser = result.Data.ToString() ?? string.Empty;
        }
    }
}";

public const string DividerInsertExample = @"<MudList>
    <MudListItem Avatar=""@Icons.Material.TrendingUp"">
        Trending
    </MudListItem>
    <MudDivider DividerType=""DividerType.Inset"" />
    <MudListItem Avatar=""@Icons.Material.StarRate"">
        Most Stars
    </MudListItem>
    <MudDivider DividerType=""DividerType.Inset"" />
    <MudListItem Avatar=""@Icons.Material.History"">
        History
    </MudListItem>
</MudList>";

public const string DividerListExample = @"<MudList Clickable=""true"">
    <MudListItem>Inbox</MudListItem>
    <MudDivider />
    <MudListItem>Sent</MudListItem>
    <MudDivider />
    <MudListItem>Drafts</MudListItem>
    <MudDivider />
    <MudListItem>Spam</MudListItem>
</MudList>";

public const string DividerMiddleExample = @"<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo=""Typo.h5"">Uranium-235</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudText>This is the type of uranium used in the RBMK reactors.</MudText>
        <MudDivider DividerType=""DividerType.Middle"" Class=""my-6""/>
        <MudText GutterBottom=""true"">Select Reactor Type</MudText>
        <MudChip Color=""Color.Secondary"">RBMK-1000</MudChip><MudChip>RBMK-1500</MudChip><MudChip>RBMKP-2400</MudChip>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant=""Variant.Text"" Color=""Color.Primary"">Read More</MudButton>
    </MudCardActions>
</MudCard>";

public const string DividerVerticalExample = @"<MudPaper Outlined=""true"">
    <MudIcon Icon=""@Icons.Material.FormatAlignRight"" />
    <MudIcon Icon=""@Icons.Material.FormatAlignCenter"" />
    <MudIcon Icon=""@Icons.Material.FormatAlignLeft"" />
    <MudDivider Vertical=""true"" FlexItem=""true"" />
    <MudIcon Icon=""@Icons.Material.FormatBold"" />
    <MudIcon Icon=""@Icons.Material.FormatItalic"" />
    <MudIcon Icon=""@Icons.Material.FormatUnderlined"" />
</MudPaper>";

public const string DrawerClippingExample = @"<DocsFrame>
    <MudLayout DrawerOpen=""@DocsDrawerOpen"" DrawerClipped=""true"">
        <MudAppBar Position=""Position.Absolute"" Elevation=""0"">
            <MudIconButton Icon=""@Icons.Material.Menu"" Color=""Color.Inherit"" Edge=""Edge.Start"" OnClick=""@((e) => DocsDrawerToggle())"" />
            <MudAppBarSpacer />
            <MudIconButton Icon=""@Icons.Custom.GitHub"" Color=""Color.Inherit"" Link=""https://github.com/Garderoben/MudBlazor"" Target=""_blank"" />
        </MudAppBar>
        <MudDrawer>
            <MudDrawerHeader>
                <MudText Typo=""Typo.h6"">My App</MudText>
            </MudDrawerHeader>
            <MudNavMenu>
                <MudNavLink Href=""#"">Store</MudNavLink>
                <MudNavLink Href=""#"">Library</MudNavLink>
                <MudNavLink Href=""#"">Community</MudNavLink>
            </MudNavMenu>
        </MudDrawer>
        <MudMainContent>
            <LoremIpsum />
        </MudMainContent>
    </MudLayout>
</DocsFrame>

@code{
    bool DocsDrawerOpen = true;

    void DocsDrawerToggle()
    {
        DocsDrawerOpen = !DocsDrawerOpen;
    }
}";

public const string DrawerCombinedExample = @"<DocsFrame>
    <MudLayout DrawerOpen=""@DocsDrawerOpen"" DrawerClipped=""@DocsLayoutClipping"">
        <MudAppBar Position=""Position.Absolute"" Elevation=""0"">
            <MudIconButton Icon=""@Icons.Material.Menu"" Color=""Color.Inherit"" Edge=""Edge.Start"" OnClick=""@((e) => DocsDrawerToggle())"" />
            @if (DocsLayoutClipping)
            {
                <MudText Typo=""Typo.h6"" Class=""ml-3"">My App</MudText>
            }
            <MudAppBarSpacer />
            <MudIconButton Icon=""@Icons.Material.BorderStyle"" Color=""Color.Inherit"" OnClick=""@((e) => DocsLayoutToggle())"" />
        </MudAppBar>
        <MudDrawer>
            @if (!DocsLayoutClipping)
            {
                <MudDrawerHeader>
                    <MudText Typo=""Typo.h6"">My App</MudText>
                </MudDrawerHeader>
            }
            <MudNavMenu>
                <MudNavLink Href=""#"">Store</MudNavLink>
                <MudNavLink Href=""#"">Library</MudNavLink>
                <MudNavLink Href=""#"">Community</MudNavLink>
            </MudNavMenu>
        </MudDrawer>
        <MudMainContent>
            <MudText Color=""Color.Secondary"" GutterBottom=""true"">Click the right side button in the appbar to change layout.</MudText>
            <LoremIpsum />
        </MudMainContent>
    </MudLayout>
</DocsFrame>

@code{
    bool DocsDrawerOpen = true;
    bool DocsLayoutClipping = false;

    void DocsDrawerToggle()
    {
        DocsDrawerOpen = !DocsDrawerOpen;
    }

    void DocsLayoutToggle()
    {
        DocsLayoutClipping = !DocsLayoutClipping;
    }
}";

public const string DrawerPersistentExample = @"<DocsFrame>
    <MudLayout DrawerOpen=""@DocsDrawerOpen"">
        <MudAppBar Position=""Position.Absolute"" Elevation=""0"">
            <MudIconButton Icon=""@Icons.Material.Menu"" Color=""Color.Inherit"" Edge=""Edge.Start"" OnClick=""@((e) => DocsDrawerToggle())"" />
            <MudAppBarSpacer />
            <MudIconButton Icon=""@Icons.Custom.GitHub"" Color=""Color.Inherit"" Link=""https://github.com/Garderoben/MudBlazor"" Target=""_blank"" />
        </MudAppBar>
        <MudDrawer>
            <MudDrawerHeader>
                <MudText Typo=""Typo.h6"">My App</MudText>
            </MudDrawerHeader>
            <MudNavMenu>
                <MudNavLink Href=""#"">Store</MudNavLink>
                <MudNavLink Href=""#"">Library</MudNavLink>
                <MudNavLink Href=""#"">Community</MudNavLink>
            </MudNavMenu>
        </MudDrawer>
        <MudMainContent>
            <LoremIpsum />
        </MudMainContent>
    </MudLayout>
</DocsFrame>

@code{
    bool DocsDrawerOpen = true;

    void DocsDrawerToggle()
    {
        DocsDrawerOpen = !DocsDrawerOpen;
    }
}";

public const string ExpansionPanelDisabledExample = @"<MudExpansionPanels>
    <MudExpansionPanel Text=""Panel One"">
        Panel One Content
    </MudExpansionPanel>
    <MudExpansionPanel Text=""Panel Two"" Disabled=""true"">
        Panel Two Content
    </MudExpansionPanel>
    <MudExpansionPanel Text=""Panel Three"">
        Panel Three Content
    </MudExpansionPanel>
</MudExpansionPanels>";

public const string ExpansionPanelMultiExample = @"<MudExpansionPanels MultiExpansion=""true"">
    <MudExpansionPanel Text=""Panel One"">
        Panel One Content
    </MudExpansionPanel>
    <MudExpansionPanel Text=""Panel Two"">
        Panel Two Content
    </MudExpansionPanel>
    <MudExpansionPanel Text=""Panel Three"">
        Panel Three Content
    </MudExpansionPanel>
    <MudExpansionPanel Text=""Panel Four"">
        Panel Four Content
    </MudExpansionPanel>
</MudExpansionPanels>";

public const string ExpansionPanelSimpleExample = @"<MudExpansionPanels>
    <MudExpansionPanel Text=""Panel One"">
        Panel One Content
    </MudExpansionPanel>
    <MudExpansionPanel Text=""Panel Two"">
        Panel Two Content
    </MudExpansionPanel>
    <MudExpansionPanel Text=""Panel Three"">
        Panel Three Content
    </MudExpansionPanel>
    <MudExpansionPanel Text=""Panel Four"">
        Panel Four Content
    </MudExpansionPanel>
</MudExpansionPanels>";

public const string FabSimpleExample = @"<MudFab Color=""Color.Primary"" Icon=""@Icons.Material.Add"" />
<MudFab Color=""Color.Secondary"" Icon=""@Icons.Material.Edit"" />
<MudFab Icon=""@Icons.Material.Navigation"" Label=""Navigation"" />
<MudFab Icon=""@Icons.Material.Save"" Disabled=""true"" />";

public const string FabSizeExample = @"<SectionContentRow>
    <MudFab Color=""Color.Secondary"" Icon=""@Icons.Material.Add"" Size=""Size.Small"" />
    <MudFab Color=""Color.Secondary"" Icon=""@Icons.Material.Add"" Size=""Size.Medium"" />
    <MudFab Color=""Color.Secondary"" Icon=""@Icons.Material.Add"" Size=""Size.Large"" />
</SectionContentRow>
<SectionContentRow>
    <MudFab Color=""Color.Primary"" Icon=""@Icons.Material.ShoppingCart"" Size=""Size.Small"" Label=""To cart"" />
    <MudFab Color=""Color.Primary"" Icon=""@Icons.Material.ShoppingCart"" Size=""Size.Medium"" Label=""To cart"" />
    <MudFab Color=""Color.Primary"" Icon=""@Icons.Material.ShoppingCart"" Size=""Size.Large"" Label=""To cart"" />
</SectionContentRow>";

public const string GridBasicExample = @"<MudGrid>
    <MudItem xs=""12"">
        <MudPaper>xs=12</MudPaper>
    </MudItem>
    <MudItem xs=""6"">
        <MudPaper>xs=6</MudPaper>
    </MudItem>
    <MudItem xs=""6"">
        <MudPaper>xs=6</MudPaper>
    </MudItem>
    <MudItem xs=""3"">
        <MudPaper>xs=3</MudPaper>
    </MudItem>
    <MudItem xs=""3"">
        <MudPaper>xs=3</MudPaper>
    </MudItem>
    <MudItem xs=""3"">
        <MudPaper>xs=3</MudPaper>
    </MudItem>
    <MudItem xs=""3"">
        <MudPaper>xs=3</MudPaper>
    </MudItem>
</MudGrid>";

public const string GridSpacingExample = @"<MudGrid>
    <MudItem xs=""12"">
        <MudGrid Spacing=""@spacing"" Justify=""Justify.Center"">
            <MudItem>
                <MudPaper />
            </MudItem>
            <MudItem>
                <MudPaper />
            </MudItem>
            <MudItem>
                <MudPaper />
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>
<MudPaper Class=""demo-grid-paper"" Elevation=""0"">
    <MudButton Color=""Color.Primary"" OnClick=""@AddSpacing"">Change Spacing</MudButton>
    <MudAppBarSpacer></MudAppBarSpacer>
    <MudText>Spacing: @spacing</MudText>
</MudPaper>

@code {
    public int spacing { get; set; } = 2;
    void AddSpacing()
    {
        if (spacing >= 10)
        {
            spacing = 0;
        }
        else
        {
            spacing += 1;
        }
        StateHasChanged();
    }
}";

public const string GridWithBreakpointsExample = @"<MudGrid>
    <MudItem xs=""12"">
        <MudPaper>xs=12</MudPaper>
    </MudItem>
    <MudItem xs=""12"" sm=""6"">
        <MudPaper>xs=12 sm=6</MudPaper>
    </MudItem>
    <MudItem xs=""12"" sm=""6"">
        <MudPaper>xs=12 sm=6</MudPaper>
    </MudItem>
    <MudItem xs=""6"" sm=""3"">
        <MudPaper>xs=6 sm=3</MudPaper>
    </MudItem>
    <MudItem xs=""6"" sm=""3"">
        <MudPaper>xs=6 sm=3</MudPaper>
    </MudItem>
    <MudItem xs=""6"" sm=""3"">
        <MudPaper>xs=6 sm=3</MudPaper>
    </MudItem>
    <MudItem xs=""6"" sm=""3"">
        <MudPaper>xs=6 sm=3</MudPaper>
    </MudItem>
</MudGrid>";

public const string BrowserResizeEventExample = @"<MudCard Class=""pa-5"">
    <MudText>Resize the window and see width and height change:<br /> 
        Browser window is @(width)x@(height)px</MudText>
</MudCard>

@code
{
    [Inject] IResizeListenerService ResizeListener { get; set; }

    int width = 0;
    int height = 0;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ResizeListener.OnResized += OnResized;
        }
        var size = await ResizeListener.GetBrowserWindowSize();
        height = size.Height;
        width = size.Width;
        await base.OnAfterRenderAsync(firstRender);
    }

    private void OnResized(object sender, BrowserWindowSize size)
    {
        width = size.Width;
        height = size.Height;
        InvokeAsync(StateHasChanged);
    }
}";

public const string HiddenExample = @"<MudHidden Breakpoint=""Breakpoint.Xl"" Invert=""true"">
    <MudCard Class=""pa-5"">
        <MudText>XL</MudText>
    </MudCard>
</MudHidden>
<MudHidden Breakpoint=""Breakpoint.Lg"" Invert=""true"">
    <MudCard Class=""pa-5"">
        <MudText>LG</MudText>
    </MudCard>
</MudHidden>
<MudHidden Breakpoint=""Breakpoint.Md"" Invert=""true"">
    <MudCard Class=""pa-5"">
        <MudText>MD</MudText>
    </MudCard>
</MudHidden>
<MudHidden Breakpoint=""Breakpoint.Sm"" Invert=""true"">
    <MudCard Class=""pa-5"">
        <MudText>SM</MudText>
    </MudCard>
</MudHidden>
<MudHidden Breakpoint=""Breakpoint.Xs"" Invert=""true"">
    <MudCard Class=""pa-5"">
        <MudText>XS</MudText>
    </MudCard>
</MudHidden>
<MudHidden Breakpoint=""Breakpoint.LgAndUp"" Invert=""true"">
    <MudCard Class=""pa-5"">
        <MudText>LG and Up</MudText>
    </MudCard>
</MudHidden>
<MudHidden Breakpoint=""Breakpoint.MdAndUp"" Invert=""true"">
    <MudCard Class=""pa-5"">
        <MudText>MD and Up</MudText>
    </MudCard>
</MudHidden>
<MudHidden Breakpoint=""Breakpoint.SmAndUp"" Invert=""true"">
    <MudCard Class=""pa-5"">
        <MudText>SM and Up</MudText>
    </MudCard>
</MudHidden>
<MudHidden Breakpoint=""Breakpoint.LgAndDown"" Invert=""true"">
    <MudCard Class=""pa-5"">
        <MudText>LG and Down</MudText>
    </MudCard>
</MudHidden>
<MudHidden Breakpoint=""Breakpoint.MdAndDown"" Invert=""true"">
    <MudCard Class=""pa-5"">
        <MudText>MD and Down</MudText>
    </MudCard>
</MudHidden>
<MudHidden Breakpoint=""Breakpoint.SmAndDown"" Invert=""true"">
    <MudCard Class=""pa-5"">
        <MudText>SM and Down</MudText>
    </MudCard>
</MudHidden>";

public const string IconButtonSimpleExample = @"<MudIconButton Icon=""@Icons.Material.Delete""></MudIconButton>
<MudIconButton Icon=""@Icons.Custom.GitHub"" Color=""Color.Primary""></MudIconButton>
<MudIconButton Icon=""@Icons.Material.Favorite"" Color=""Color.Secondary""></MudIconButton>
<MudIconButton Icon=""@Icons.Material.Share"" Disabled=""true""></MudIconButton>";

public const string IconToggleButtonExample = @"<MudIconButton Icon=""@Icons.Material.Delete""></MudIconButton>
<MudIconButton Icon=""@Icons.Custom.GitHub"" Color=""Color.Primary""></MudIconButton>
<MudIconButton Icon=""@Icons.Material.Favorite"" Color=""Color.Secondary""></MudIconButton>
<MudIconButton Icon=""@Icons.Material.Share"" Disabled=""true""></MudIconButton>";

public const string IconsColorExample = @"<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Default"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Primary"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Secondary"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Success"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Info"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Warning"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Danger"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Dark"" />";

public const string IconsFontAwesomeExample = @"<link href=""https://use.fontawesome.com/releases/v5.14.0/css/all.css"" rel=""stylesheet"">
<MudIcon FontClass=""fab fa-internet-explorer"" Color=""Color.Primary"" />
<MudIcon FontClass=""fab fa-angellist"" Color=""Color.Secondary"" />
<MudIcon FontClass=""fas fa-dragon"" Color=""Color.Success"" />
<MudIcon FontClass=""fas fa-toilet-paper-slash"" />
<MudIcon FontClass=""fas fa-toilet-paper-slash"" Size=""Size.Small"" />
<MudIcon FontClass=""fas fa-toilet-paper-slash"" Size=""Size.Large"" />";

public const string IconsFontIconsExample = @"<link href=""https://fonts.googleapis.com/icon?family=Material+Icons"" rel=""stylesheet"">";

public const string IconsFontMaterialIconsExample = @"<link href=""https://fonts.googleapis.com/icon?family=Material+Icons"" rel=""stylesheet"">

<MudIcon FontIcon=""accessibility"" />
<MudIcon FontIcon=""invert_colors"" Color=""Color.Primary"" />
<MudIcon FontIcon=""android"" Color=""Color.Success"" />
<MudIcon FontIcon=""settings"" />
<MudIcon FontIcon=""settings"" Size=""Size.Small"" />
<MudIcon FontIcon=""settings"" Size=""Size.Large"" />";

public const string IconsSizeExample = @"<MudIcon Icon=""@Icons.Custom.Radioactive"" Size=""Size.Small"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Size=""Size.Large"" />";

public const string IconsUsageExample = @"<MudIcon Icon=""@Icons.Material.Favorite"" />
<MudIcon Icon=""@Icons.Material.Api"" />
<MudIcon Icon=""@Icons.Material.AddCircle"" />
<MudIcon Icon=""@Icons.Custom.GitHub"" />
<MudIcon Icon=""@Icons.Custom.Google"" />
<MudIcon Icon=""@Icons.Custom.Reddit"" />";

public const string LinkSimpleExample = @"<MudLink Href=""#"">Default</MudLink>
<MudLink Href=""#"" Typo=""Typo.body2"">Different Typography</MudLink>";

public const string LinkUnderlineExample = @"<MudLink Href=""#"">Default</MudLink>
<MudLink Href=""#"" Underline=""Underline.Always"">Always</MudLink>
<MudLink Href=""#"" Underline=""Underline.None"">None</MudLink>";

public const string ListFolderExample = @"<MudList>
    <MudListItem Avatar=""@Icons.Material.Image"">
        Photos
    </MudListItem>
    <MudListItem Avatar=""@Icons.Material.Work"">
        Work
    </MudListItem>
    <MudListItem Avatar=""@Icons.Material.Umbrella"">
        Vacation
    </MudListItem>
</MudList>";

public const string ListInteractiveExample = @"<MudGrid>
    <MudItem xs=""12"" md=""12"">
        <MudCheckBox @bind-Checked=""@Dense"" Label=""Dense"" Color=""Color.Default"" />
        <MudCheckBox @bind-Checked=""@Clickable"" Label=""Clickable"" Color=""Color.Primary"" />
        <MudCheckBox @bind-Checked=""@Gutters"" Label=""Disable Gutters"" Color=""Color.Secondary"" />
    </MudItem>
    <MudItem xs=""12"" md=""6"">
        <MudText Typo=""Typo.h6"" GutterBottom=""true"">Text only</MudText>
        <MudList Clickable=""@Clickable"" Dense=""@Dense"" DisableGutters=""@Gutters"">
            <MudListItem Text=""Single List Item"" />
            <MudListItem Text=""Single List Item"" />
            <MudListItem Text=""Single List Item"" />
        </MudList>
    </MudItem>
    <MudItem xs=""12"" md=""6"">
        <MudText Typo=""Typo.h6"" GutterBottom=""true"">Icons with text</MudText>
        <MudList Clickable=""@Clickable"" Dense=""@Dense"" DisableGutters=""@Gutters"">
            <MudListItem Text=""Single List Item"" Icon=""@Icons.Material.Bookmark"" />
            <MudListItem Text=""Single List Item"" Icon=""@Icons.Material.Bookmark"" />
            <MudListItem Text=""Single List Item"" Icon=""@Icons.Material.Bookmark"" />
        </MudList>
    </MudItem>
    <MudItem xs=""12"" md=""6"">
        <MudText Typo=""Typo.h6"" GutterBottom=""true"">Avatar with text</MudText>
        <MudList Clickable=""@Clickable"" Dense=""@Dense"" DisableGutters=""@Gutters"">
            <MudListItem Text=""Single List Item"" Avatar=""@Icons.Material.Image"" />
            <MudListItem Text=""Single List Item"" Avatar=""@Icons.Material.Image"" />
            <MudListItem Text=""Single List Item"" Avatar=""@Icons.Material.Image"" />
        </MudList>
    </MudItem>
</MudGrid>



@code {
    public bool Dense { get; set; }
    public bool Clickable { get; set; }
    public bool Gutters { get; set; }
}";

public const string ListNestedExample = @"<MudList Clickable=""true"">
    <MudListSubheader>
        Nested List Items
    </MudListSubheader>
    <MudListItem Icon=""@Icons.Material.Send"">
        Sent mail
    </MudListItem>
    <MudListItem Icon=""@Icons.Material.Drafts"">
        Drafts
    </MudListItem>
    <MudListItem Icon=""@Icons.Material.Inbox"" Text=""Inbox"">
        <NestedList>
            <MudListItem Icon=""@Icons.Material.StarRate"">
                Starred
            </MudListItem>
            <MudListItem Icon=""@Icons.Material.WatchLater"">
                Snoozed
            </MudListItem>
        </NestedList>
    </MudListItem>
</MudList>";

public const string ListSimpleExample = @"<MudList Clickable=""true"">
    <MudListItem Text=""Inbox"" Icon=""@Icons.Material.Inbox""/>
    <MudListItem Text=""Sent"" Icon=""@Icons.Material.Send""/>
    <MudDivider />
    <MudListItem Text=""Trash""/>
    <MudListItem Text=""Spam""/>
</MudList>";

public const string MenuCustomizationExample = @"<MudMenu Label=""Open Menu"">
    <MudMenuItem>Enlist</MudMenuItem>
    <MudMenuItem>Barracks</MudMenuItem>
    <MudMenuItem>Armory</MudMenuItem>
</MudMenu>

<MudMenu Label=""Open Menu"" Variant=""Variant.Filled"" Color=""Color.Primary"">
    <MudMenuItem>Enlist</MudMenuItem>
    <MudMenuItem>Barracks</MudMenuItem>
    <MudMenuItem>Armory</MudMenuItem>
</MudMenu>

<MudMenu Label=""Open Menu"" Variant=""Variant.Outlined"" Color=""Color.Secondary"">
    <MudMenuItem>Enlist</MudMenuItem>
    <MudMenuItem>Barracks</MudMenuItem>
    <MudMenuItem>Armory</MudMenuItem>
</MudMenu>

<MudMenu Label=""Open Menu"" Variant=""Variant.Filled"" Disabled=""true"">
    <MudMenuItem>Enlist</MudMenuItem>
    <MudMenuItem>Barracks</MudMenuItem>
    <MudMenuItem>Armory</MudMenuItem>
</MudMenu>";

public const string MenuIconButtonsExample = @"<MudMenu Icon=""@Icons.Material.MoreVert"">
    <MudMenuItem>Profile</MudMenuItem>
    <MudMenuItem>My account</MudMenuItem>
    <MudMenuItem>Logout</MudMenuItem>
</MudMenu>

<MudMenu Icon=""@Icons.Material.Settings"" Color=""Color.Primary"">
    <MudMenuItem>Profile</MudMenuItem>
    <MudMenuItem>My account</MudMenuItem>
    <MudMenuItem>Logout</MudMenuItem>
</MudMenu>

<MudMenu Icon=""@Icons.Material.Favorite"" Color=""Color.Secondary"">
    <MudMenuItem>Profile</MudMenuItem>
    <MudMenuItem>My account</MudMenuItem>
    <MudMenuItem>Logout</MudMenuItem>
</MudMenu>

<MudMenu Icon=""@Icons.Material.Build"" Disabled=""true"">
    <MudMenuItem>Profile</MudMenuItem>
    <MudMenuItem>My account</MudMenuItem>
    <MudMenuItem>Logout</MudMenuItem>
</MudMenu>";

public const string MenuSimpleExample = @"<MudMenu Label=""Open Menu"">
    <MudMenuItem>Enlist</MudMenuItem>
    <MudMenuItem>Barracks</MudMenuItem>
    <MudMenuItem>Armory</MudMenuItem>
</MudMenu>";

public const string MenuUsageExample = @"<MudMenu Label=""@Message"" Color=""Color.Primary"">
    <MudMenuItem Link=""/components/button"">Link</MudMenuItem>
    <MudMenuItem OnClick=""AddMessage"">On Click</MudMenuItem>
</MudMenu>

@code {
    string Message { get; set; } = ""Open Usage Menu"";

    void AddMessage()
    {
        Message = ""Menu Item clicked"";
    }
}";

public const string NavMenuExample = @"<MudNavMenu Class=""demo-navmenu"">
    <MudNavLink Href=""/dashboard"">Dashboard</MudNavLink>
    <MudNavLink Href=""/servers"">Servers</MudNavLink>
    <MudNavLink Href=""/billing"">Billing</MudNavLink>
    <MudNavGroup Title=""Settings"" Expanded=""true"">
        <MudNavLink Href=""/users"">Users</MudNavLink>
        <MudNavLink Href=""/security"">Security</MudNavLink>
    </MudNavGroup>
    <MudNavLink Href=""/about"">About</MudNavLink>
</MudNavMenu>";

public const string PaperComponentExample = @"<MudPaper Elevation=""0""></MudPaper>
<MudPaper></MudPaper>
<MudPaper Elevation=""3""></MudPaper>";

public const string PaperVariantsExample = @"<MudPaper Outlined=""true""></MudPaper>
<MudPaper Outlined=""true"" Square=""true""></MudPaper>
<MudPaper Square=""true""></MudPaper>";

public const string ProgressCircularDeterminateExample = @"@implements IDisposable;

<MudProgressCircular Color=""Color.Default"" Value=""@Value"" />
<MudProgressCircular Color=""Color.Primary"" Value=""@Value"" />
<MudProgressCircular Color=""Color.Secondary"" Value=""@Value"" />
<MudProgressCircular Color=""Color.Success"" Value=""@Value"" />
<MudProgressCircular Color=""Color.Info"" Value=""@Value"" />

@code {
    public int Value { get; set; }

    public async void StartTimerAsync()
    {
        if (disposed)
            return;
        Value = 0;
        while (Value < 100)
        {
            Value = Value + 4;
            StateHasChanged();
            await Task.Delay(500);
            if (disposed)
                return;
        }
        Value = 0;
        StartTimerAsync();
    }
    protected override void OnInitialized()
        => StartTimerAsync();

    bool disposed;
    public void Dispose()
    {
        disposed = true;
    }

}";

public const string ProgressCircularInterminateExample = @"<MudProgressCircular Color=""Color.Default"" Indeterminate=""true"" />
<MudProgressCircular Color=""Color.Primary"" Indeterminate=""true""/>
<MudProgressCircular Color=""Color.Secondary"" Indeterminate=""true"" />
<MudProgressCircular Color=""Color.Success"" Indeterminate=""true"" />
<MudProgressCircular Color=""Color.Info"" Indeterminate=""true"" />";

public const string ProgressLinearBufferExample = @"<MudProgressLinear Color=""Color.Primary"" Buffer=""true"" Value=""@Value"" BufferValue=""@BufferValue"" />
<MudProgressLinear Color=""Color.Secondary"" Buffer=""true"" Value=""@Value"" BufferValue=""@BufferValue"" />

@code {
    public int Value { get; set; }
    public int BufferValue { get; set; }

    public async void StartTimerAsync()
    {
        if (disposed)
            return;
        Value = 100;
        BufferValue = 100;
        while (Value > 0)
        {
            Value = Value - 4;
            BufferValue = BufferValue - 5;
            StateHasChanged();
            await Task.Delay(500);
            if (disposed)
                return;
        }
        Value = 100;
        BufferValue = 100;
        StartTimerAsync();
    }
    protected override void OnInitialized()
        => StartTimerAsync();

    bool disposed;
    public void Dispose()
    {
        disposed = true;
    }

}";

public const string ProgressLinearDeterminateExample = @"<MudProgressLinear Color=""Color.Primary"" Value=""@Value"" />
<MudProgressLinear Color=""Color.Secondary"" Value=""@Value"" />

@code {
    public int Value { get; set; }

    public async void StartTimerAsync()
    {
        if (disposed)
            return;
        Value = 100;
        while (Value > 0)
        {
            Value = Value - 4;
            StateHasChanged();
            await Task.Delay(500);
            if (disposed)
                return;
        }
        Value = 100;
        StartTimerAsync();
    }
    protected override void OnInitialized()
        => StartTimerAsync();

    bool disposed;
    public void Dispose()
    {
        disposed = true;
    }

}";

public const string ProgressLinearInterminateExample = @"<MudProgressLinear Color=""Color.Primary"" Indeterminate=""true""/>
<MudProgressLinear Color=""Color.Secondary"" Indeterminate=""true""/>";

public const string RadioGroupExample = @"<MudForm>
    <MudRadioGroup @bind-SelectedLabel=""@SelectedLabel"" @bind-SelectedOption=""@SelectedOption"">
        <MudRadio Color=""Color.Primary"" Option=""Radio 1"">Primary</MudRadio>
        <MudRadio Color=""Color.Secondary"" Option=""Radio 2"">Secondary</MudRadio>
        <MudRadio Option=""Radio 3"">Default</MudRadio>
        <MudRadio Disabled=""true"" Option=""Radio 4"">Disabled</MudRadio>
    </MudRadioGroup>
</MudForm> 

@code {
    public string SelectedLabel { get; set; } = ""Primary"";
    public string SelectedOption { get; set; }
}";

public const string RadioLabelPlacementExample = @"<MudForm Class=""demo-radio-inline"">
    <MudRadioGroup @bind-SelectedLabel=""@SelectedLabel"" @bind-SelectedOption=""@SelectedOption"">
        <MudRadio Placement=""Placement.Bottom"" Color=""Color.Primary"" Option=""Radio 1"">Bottom</MudRadio>
        <MudRadio Placement=""Placement.Start"" Color=""Color.Primary"" Option=""Radio 2"">Start</MudRadio>
        <MudRadio Placement=""Placement.Top"" Color=""Color.Primary"" Option=""Radio 3"">Top</MudRadio>
        <MudRadio Placement=""Placement.End"" Color=""Color.Primary"" Option=""Radio 4"">End</MudRadio>
    </MudRadioGroup>
</MudForm>

@code {
    public string SelectedLabel { get; set; } = ""Primary"";
    public string SelectedOption { get; set; }
}";

public const string MultiSelectExample = @"<MudGrid>
    <MudItem xs=""12"" md=""12"">
        <MudSelect Label=""US States"" HelperText=""Pick your favorite states"" MultiSelection=""true"" @bind-Value=""value"" @bind-SelectedValues=""options"">
            @foreach (var state in states)
            {
                <MudSelectItem Value=""@state"">@state</MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem xs=""12"" md=""6"">
        <MudText Typo=""Typo.body2"">MudSelect.Value: ""@value""</MudText>
    </MudItem>
    <MudItem xs=""12"" md=""6"">
        <MudText Typo=""Typo.body2"">MudSelect.SelectedValues: HashSet&lt;string&gt; { @(string.Join("", "", options.Select(x=>$""\""{x}\""""))) }</MudText>
    </MudItem>
</MudGrid>
   

@code {

    private string value { get; set; } = ""Nothing selected"";
    private HashSet<string> options { get; set; } = new HashSet<string>() { ""Alaska"" };

    private string[] states =
    {
        ""Alabama"", ""Alaska"", ""American Samoa"", ""Arizona"",
        ""Arkansas"", ""California"", ""Colorado"", ""Connecticut"",
        ""Delaware"", ""District of Columbia"", ""Federated States of Micronesia"",
        ""Florida"", ""Georgia"", ""Guam"", ""Hawaii"", ""Idaho"",
        ""Illinois"", ""Indiana"", ""Iowa"", ""Kansas"", ""Kentucky"",
        ""Louisiana"", ""Maine"", ""Marshall Islands"", ""Maryland"",
        ""Massachusetts"", ""Michigan"", ""Minnesota"", ""Mississippi"",
        ""Missouri"", ""Montana"", ""Nebraska"", ""Nevada"",
        ""New Hampshire"", ""New Jersey"", ""New Mexico"", ""New York"",
        ""North Carolina"", ""North Dakota"", ""Northern Mariana Islands"", ""Ohio"",
        ""Oklahoma"", ""Oregon"", ""Palau"", ""Pennsylvania"", ""Puerto Rico"",
        ""Rhode Island"", ""South Carolina"", ""South Dakota"", ""Tennessee"",
        ""Texas"", ""Utah"", ""Vermont"", ""Virgin Island"", ""Virginia"",
        ""Washington"", ""West Virginia"", ""Wisconsin"", ""Wyoming"",
    };

}";

public const string SelectDenseExample = @"<MudSelect Label=""Dense"" Dense=""true"">
    <MudSelectItem Value=""foo"">Foo</MudSelectItem>
    <MudSelectItem Value=""bar"">Bar</MudSelectItem>
    <MudSelectItem Value=""foo"">Foo</MudSelectItem>
</MudSelect>";

public const string SelectDisabledExample = @"<MudSelect Label=""Disabled"" Disabled=""true"">
    <MudSelectItem Value=""foo"">Foo</MudSelectItem>
    <MudSelectItem Value=""bar"">Bar</MudSelectItem>
</MudSelect>";

public const string SelectInteractiveExample = @"<MudGrid>
    <MudItem xs=""12"" md=""3"">
        <MudForm>
            <MudSwitch CheckedChanged=""@OnPostitionChange"" Color=""Color.Primary"" Label=""Open Top"" />
            <MudSwitch @bind-Checked=""@OffsetY"" Color=""Color.Secondary"" Label=""Offset Y"" />
            <MudSwitch @bind-Checked=""@Dense"" Color=""Color.Primary"" Label=""Dense"" />
        </MudForm>
    </MudItem>
    <MudItem xs=""12"" md=""1"" />
    <MudItem xs=""12"" md=""4"">
        <MudSelect Label=""Variants"" Variant=""@_variant"" Direction=""@_direction"" Dense=""@Dense"" OffsetY=""@OffsetY"" ValueChanged=""OnSelectedValue"">
            <MudSelectItem Value=""text"">Text</MudSelectItem>
            <MudSelectItem Value=""filled"">Filled</MudSelectItem>
            <MudSelectItem Value=""outlined"">Outlined</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs=""12"" md=""4"" />
</MudGrid>

@code {

    public bool OpenTop { get; set; }
    public bool OffsetY { get; set; } = true;
    public bool Dense { get; set; } = true;

    public string variant { get; set; }

    public Direction _direction {get; set;}
    public Variant _variant { get; set; } = Variant.Filled;

    protected void OnPostitionChange()
    {
        OpenTop = !OpenTop;

        if (OpenTop)
        {
            _direction = Direction.Top;
        }
        else
        {
            _direction = Direction.Bottom;
        }
    }

    private void OnSelectedValue(string value)
    {
        if(value == ""text"")
        {
            _variant = Variant.Text;
        }
        if (value == ""filled"")
        {
            _variant = Variant.Filled;
        }
        if (value == ""outlined"")
        {
            _variant = Variant.Outlined;
        }
    }
}";

public const string SelectUsageExample = @"<MudGrid>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudSelect Label=""Food"" ValueChanged=""OnSelectedValue"">
            <MudSelectItem Value=""pizza"">Pizza</MudSelectItem>
            <MudSelectItem Value=""burgers"">Burgers</MudSelectItem>
            <MudSelectItem Value=""hotdog"">Hot Dogs</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudSelect Label=""Food"" ValueChanged=""OnSelectedValue"" HelperText=""With helper text"">
            <MudSelectItem Value=""pizza"">Pizza</MudSelectItem>
            <MudSelectItem Value=""burgers"">Burgers</MudSelectItem>
            <MudSelectItem Value=""hotdog"">Hot Dogs</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudSelect Placeholder=""Brands"" ValueChanged=""OnSelectedValue"" HelperText=""Disabled"" Disabled=""true"">
            <MudSelectItem Value=""volvo"">Volvo</MudSelectItem>
            <MudSelectItem Value=""saab"">Saab</MudSelectItem>
            <MudSelectItem Value=""scania"">Scania</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs=""12"" md=""12"">
        <MudText Class=""mb-n3"" Typo=""Typo.body2"">
            Selected value: @Item
        </MudText>
    </MudItem>
</MudGrid>



@code {

    private string Item { get; set; } = ""Nothing selected"";

    private void OnSelectedValue(string value)
    {
        Item = value;
    }

}";

public const string SelectVariantsExample = @"<MudGrid>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudSelect Label=""Text"">
            <MudSelectItem Value=""foo"">Foo</MudSelectItem>
            <MudSelectItem Value=""bar"">Bar</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudSelect Label=""Text"" Variant=""Variant.Filled"">
            <MudSelectItem Value=""foo"">Foo</MudSelectItem>
            <MudSelectItem Value=""bar"">Bar</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudSelect Label=""Text"" Variant=""Variant.Outlined"">
            <MudSelectItem Value=""foo"">Foo</MudSelectItem>
            <MudSelectItem Value=""bar"">Bar</MudSelectItem>
        </MudSelect>
    </MudItem>
</MudGrid>";

public const string SimpleTableExample = @"<MudSimpleTable>
    <thead>
        <tr>
            @foreach (var h in headings)
            {
                <th>@h</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var row in rows)
        {
            <tr>
                @foreach (var x in row.Split())
                {
                    <td>@x</td>
                }
            </tr>
        }
    </tbody>
</MudSimpleTable>

@code {
    string[] headings = { ""ID"", ""Name"", ""Email"", ""Gender"", ""IP Address"" };
    string[] rows = {
        @""1 Krishna kpartner0@usatoday.com Male 28.25.250.202"",
        @""2 Webb wstitle1@ning.com Male 237.168.134.114"",
        @""3 Nathanil nneal2@cyberchimps.com Male 92.6.0.175"",
        @""4 Adara alockwood3@patch.com Female 182.174.217.152"",
        @""5 Cecilius cchaplin4@shinystat.com Male 195.124.144.18"",
        @""6 Cicely cemerine9@soup.io Female 138.94.191.43"",
    };
}";

public const string SimpleTableHoverDenseExample = @"<MudSimpleTable Hover=""true"" Dense=""@dense"">
    <thead>
        <tr>
            @foreach (var h in headings)
            {
                <th>@h</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var row in rows)
        {
            <tr>
                @foreach (var x in row.Split())
                {
                    <td>@x</td>
                }
            </tr>
        }
    </tbody>
</MudSimpleTable>
<MudSwitch @bind-Checked=""@dense"">Dense</MudSwitch>

@code {
    bool dense=true;
    string[] headings = { ""ID"", ""Name"", ""Email"", ""Gender"", ""IP Address"" };
    string[] rows = {
        @""1 Krishna kpartner0@usatoday.com Male 28.25.250.202"",
        @""2 Webb wstitle1@ning.com Male 237.168.134.114"",
        @""3 Nathanil nneal2@cyberchimps.com Male 92.6.0.175"",
        @""4 Adara alockwood3@patch.com Female 182.174.217.152"",
        @""5 Cecilius cchaplin4@shinystat.com Male 195.124.144.18"",
        @""6 Cicely cemerine9@soup.io Female 138.94.191.43"",
    };
}";

public const string SkeletonAnimationsExample = @"<MudSkeleton />
<MudSkeleton Animation=""Animation.False"" />
<MudSkeleton Animation=""Animation.Wave"" />";

public const string SkeletonPulsateExample = @"<MudCard>
    <MudSkeleton SkeletonType=""SkeletonType.Rectangle"" Height=""200px""/>
    <MudCardContent>
        <MudSkeleton Width=""30%"" Height=""42px;"" />
        <MudSkeleton Width=""80%"" />
        <MudSkeleton Width=""100%"" />
    </MudCardContent>
    <MudCardActions>
        <MudSkeleton Width=""64px"" Height=""40px"" Class=""ml-2"" />
        <MudSkeleton Width=""105px"" Height=""40px"" Class=""ml-3"" />
    </MudCardActions>
</MudCard>

<MudCard>
    <MudCardMedia Image=""_content/MudBlazor.Docs/images/content-template-door.png"" Height=""200"" />
    <MudCardContent>
        <MudText Typo=""Typo.h5"">Old Paint</MudText>
        <MudText Typo=""Typo.body2"">Old paint found on a stone house door.</MudText>
        <MudText Typo=""Typo.body2"">This photo was taken in a small village in Istra Croatia.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant=""Variant.Text"" Color=""Color.Primary"">Share</MudButton>
        <MudButton Variant=""Variant.Text"" Color=""Color.Primary"">Learn More</MudButton>
    </MudCardActions>
</MudCard>";

public const string SkeletonVariantsExample = @"<MudSkeleton />
<MudSkeleton SkeletonType=""SkeletonType.Circle"" Width=""50px"" Height=""50px"" />
<MudSkeleton SkeletonType=""SkeletonType.Rectangle"" Width=""200px"" Height=""110px"" />";

public const string SkeletonWaveExample = @"<MudCard>
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudSkeleton SkeletonType=""SkeletonType.Circle"" Animation=""Animation.Wave"" Height=""40px"" Width=""40px""/>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudSkeleton Animation=""Animation.Wave"" Width=""40%"" />
            <MudSkeleton Animation=""Animation.Wave"" Width=""60%"" />
        </CardHeaderContent>
    </MudCardHeader>
    <MudSkeleton SkeletonType=""SkeletonType.Rectangle"" Animation=""Animation.Wave"" Height=""250px"" />
    <MudCardContent>
        <MudSkeleton Animation=""Animation.Wave"" />
    </MudCardContent>
    <MudCardActions>
        <MudSkeleton SkeletonType=""SkeletonType.Circle"" Animation=""Animation.Wave"" Height=""30px"" Width=""30px"" Class=""ml-2 mb-2"" />
        <MudSkeleton SkeletonType=""SkeletonType.Circle"" Animation=""Animation.Wave"" Height=""30px"" Width=""30px"" Class=""ml-3 mb-2"" />
    </MudCardActions>
</MudCard>


<MudCard>
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudAvatar>I</MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo=""Typo.body1"">Istra Croatia</MudText>
            <MudText Typo=""Typo.body2"">Peninsula in Europe</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon=""@Icons.Material.Settings"" Color=""Color.Default"" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardMedia Image=""_content/MudBlazor.Docs/images/content-template-pilars.png"" Height=""250"" />
    <MudCardContent>
        <MudText Typo=""Typo.body2"">This photo was taken in a small village in Istra Croatia.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudIconButton Icon=""@Icons.Material.Favorite"" Color=""Color.Default"" />
        <MudIconButton Icon=""@Icons.Material.Share"" Color=""Color.Default"" />
    </MudCardActions>
</MudCard>";

public const string SliderBasicExample = @"<MudGrid>
    <MudItem>
        <MudSlider Value=""50"">Volume</MudSlider>
        <MudSlider Disabled=""true"" Value=""20"">Disabled Slider</MudSlider>
    </MudItem>
    <MudItem>
        <div class=""demo-slider-filler""></div>
        <MudSlider Value=""50"" />
        <div class=""demo-slider-filler""></div>
        <MudSlider Value=""50"" Disabled=""true"" />
    </MudItem>
</MudGrid>";

public const string SliderMinMaxExample = @"<MudSlider @bind-Value=""value1"" Min=""20"" Max=""80"">Value: @value1.ToString()</MudSlider>
<MudSlider @bind-Value=""value2"" Min=""0"" Max=""50"">Value: @value2.ToString()</MudSlider>


@code {
    public int value1 = 50;
    public int value2 = 50;
}";

public const string SliderStepsExample = @"<MudSlider Step=""10"" Value=""70"">Temperature</MudSlider>
<MudSlider Step=""10"" Value=""50"" Disabled=""true"">Disabled</MudSlider>";

public const string SparkLineExample = @"<MudSparkLine></MudSparkLine>";

public const string SwitchBasicExample = @"<MudSwitch @bind-Checked=""@Basic_Switch1"" />
<MudSwitch @bind-Checked=""@Basic_Switch2"" Color=""Color.Primary"" />
<MudSwitch @bind-Checked=""@Basic_Switch2"" Color=""Color.Secondary"" />
<MudSwitch Disabled=""true"" />

@code{
    public bool Basic_Switch1 { get; set; } = false;
    public bool Basic_Switch2 { get; set; } = true;
    public bool Basic_Switch3 { get; set; } = true;
}";

public const string SwitchWithLabelExample = @"<MudSwitch @bind-Checked=""@Label_Switch1"" Label=""Default"" />
<MudSwitch @bind-Checked=""@Label_Switch2"" Label=""Primary"" Color=""Color.Primary"" />
<MudSwitch @bind-Checked=""@Label_Switch2"" Label=""Secondary"" Color=""Color.Secondary"" />
<MudSwitch Disabled=""true"" Label=""Disabled"" />

@code{
    public bool Label_Switch1 { get; set; } = false;
    public bool Label_Switch2 { get; set; } = true;
    public bool Label_Switch3 { get; set; } = true;
}";

public const string TableExample = @"<MudTable Items=""@PeriodicTable.GetElements()"" Dense=""@dense"" Hover=""@hover"" Filter=""new Func<Element,bool>(FilterFunc)"" @bind-SelectedItem=""selected_item"">
    <ToolBarContent>
        <MudText Typo=""Typo.h6"" Class=""mud-flex-1-1-100"">Periodic Elements</MudText>
        <MudIcon Style=""margin-top: 20px; margin-right: 8px;"" Icon=""@Icons.Material.Search""></MudIcon>
        <MudTextField @bind-Value=""search_string"" Placeholder=""Search""></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Number</MudTd>
        <MudTd>@context.Sign</MudTd>
        <MudTd>@context.Name</MudTd>
        <MudTd>@context.Position</MudTd>
        <MudTd>@context.Molar</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
<MudSwitch @bind-Checked=""@hover"" Color=""Color.Primary"">Hover</MudSwitch>
<MudSwitch @bind-Checked=""@dense"" Color=""Color.Secondary"">Dense</MudSwitch>
<MudText Inline=""true"">Selected: @selected_item?.Name</MudText>

@code {
    bool dense = false;
    bool hover = true;
    bool fixed_header = false;
    string search_string = """";
    Element selected_item = null;
    HashSet<Element> selected_items = new HashSet<Element>();

    bool FilterFunc(Element element)
    {
        if (string.IsNullOrWhiteSpace(search_string))
            return true;
        if (element.Sign.Contains(search_string))
            return true;
        if (element.Name.Contains(search_string))
            return true;
        if ($""{element.Number} {element.Position} {element.Molar}"".Contains(search_string))
            return true;
        return false;
    }
}";

public const string TableFixedHeaderExample = @"<MudTable Items=""@PeriodicTable.GetElements()"" FixedHeader=""true"" Height=""400px"">
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Number</MudTd>
        <MudTd>@context.Sign</MudTd>
        <MudTd>@context.Name</MudTd>
        <MudTd>@context.Position</MudTd>
        <MudTd>@context.Molar</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions=""new int[]{50, 100}"" />
    </PagerContent>
</MudTable>
<MudSwitch @bind-Checked=""@fixed_header"">Fixed Header</MudSwitch>

@code {
    bool fixed_header = true;
}";

public const string TableMultiSelectExample = @"<MudTable Items=""@PeriodicTable.GetElements()"" MultiSelection=""true"" @bind-SelectedItems=""selected_items"" Hover=""@hover"">
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Number</MudTd>
        <MudTd>@context.Sign</MudTd>
        <MudTd>@context.Name</MudTd>
        <MudTd>@context.Position</MudTd>
        <MudTd>@context.Molar</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions=""new int[]{50, 100}"" />
    </PagerContent>
</MudTable>
<MudText Inline=""true"">Selected items: @(selected_items==null ? """" : string.Join("", "", selected_items.OrderBy(x=>x.Sign).Select(x=>x.Sign)))</MudText>

@code {
    bool hover = true;
    HashSet<Element> selected_items = new HashSet<Element>();
}";

public const string TableSortingExample = @"<MudTable Items=""@PeriodicTable.GetElements()"" Hover=""true"">
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy=""new Func<Element, object>(x=>x.Number)"">Nr</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy=""new Func<Element, object>(x=>x.Sign)"">Sign</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel InitialDirection=""SortDirection.Ascending"" SortBy=""new Func<Element, object>(x=>x.Name)"">Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy=""new Func<Element, object>(x=>x.Position)"">Position</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy=""new Func<Element, object>(x=>x.Molar)"">Mass</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Number</MudTd>
        <MudTd>@context.Sign</MudTd>
        <MudTd>@context.Name</MudTd>
        <MudTd>@context.Position</MudTd>
        <MudTd>@context.Molar</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions=""new int[]{50, 100}"" />
    </PagerContent>
</MudTable>";

public const string TabsCenteredExample = @"<MudTabs Elevation=""1"" Rounded=""true"" Centered=""true"">
    <MudTabPanel Text=""One""/>
    <MudTabPanel Text=""Two""/>
    <MudTabPanel Text=""Three""/>
</MudTabs>";

public const string TabsDisabledExample = @"<MudTabs Elevation=""1"" Rounded=""true"">
    <MudTabPanel Text=""Active""/>
    <MudTabPanel Text=""Disabled"" Disabled=""true""/>
    <MudTabPanel Text=""Active""/>
</MudTabs>";

public const string TabsIconAndTextExample = @"<MudTabs Elevation=""1"" Rounded=""true"">
    <MudTabPanel Text=""Api"" Icon=""@Icons.Material.Api""/>
    <MudTabPanel Text=""Build"" Icon=""@Icons.Material.Build""/>
    <MudTabPanel Text=""Bug Report"" Icon=""@Icons.Material.BugReport""/>
</MudTabs>";

public const string TabsIconExample = @"<MudTabs Elevation=""1"" Rounded=""true"">
    <MudTabPanel Icon=""@Icons.Material.Api""/>
    <MudTabPanel Icon=""@Icons.Material.Build""/>
    <MudTabPanel Icon=""@Icons.Material.BugReport""/>
</MudTabs>";

public const string TabsSimpleExample = @"<MudTabs Elevation=""1"">
    <MudTabPanel Text=""Item One"">
        <MudText>Item One</MudText>
    </MudTabPanel>
    <MudTabPanel Text=""Item Two"">
        <MudText>Item Two</MudText>
    </MudTabPanel>
    <MudTabPanel Text=""Item Three"">
        <MudText>Item Three</MudText>
    </MudTabPanel>
</MudTabs>";

public const string TabsVerticalExample = @"<MudTabs Vertical=""true"" Border=""true"">
    <MudTabPanel Text=""Item One"">
        <MudText>Item One</MudText>
    </MudTabPanel>
    <MudTabPanel Text=""Item Two"">
        <MudText>Item Two</MudText>
    </MudTabPanel>
    <MudTabPanel Text=""Item Three"">
        <MudText>Item Three</MudText>
    </MudTabPanel>
    <MudTabPanel Text=""Item Four"">
        <MudText>Item Four</MudText>
    </MudTabPanel>
    <MudTabPanel Text=""Item Five"">
        <MudText>Item Five</MudText>
    </MudTabPanel>
    <MudTabPanel Text=""Item Six"">
        <MudText>Item Six</MudText>
    </MudTabPanel>
</MudTabs>";

public const string TemplateExample = @"";

public const string TextFieldAdornmentsExample = @"<MudGrid>
    <MudItem xs=""12"" sm=""12"" md=""12"">
        <MudTextField Label=""Amount"" Variant=""Variant.Text"" Adornment=""Adornment.Start"" AdornmentText=""Kr"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField Label=""Amount"" Variant=""Variant.Text"" Adornment=""Adornment.Start"" AdornmentIcon=""@Icons.Material.AttachMoney"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField HelperText=""Weight"" Variant=""Variant.Text"" Adornment=""Adornment.End"" AdornmentText=""Kg"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField Label=""Password"" @bind-Value=""Password"" Variant=""Variant.Text"" InputType=""@PasswordInput"" Adornment=""Adornment.End"" AdornmentIcon=""@PasswordInputIcon"" OnAdornmentClick=""ButtonTestclick"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField Label=""Amount"" Variant=""Variant.Filled"" Adornment=""Adornment.Start"" AdornmentIcon=""@Icons.Material.AttachMoney"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField HelperText=""Weight"" Variant=""Variant.Filled"" Adornment=""Adornment.End"" AdornmentText=""Kg"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField Label=""Password"" @bind-Value=""Password"" Variant=""Variant.Filled"" InputType=""@PasswordInput"" Adornment=""Adornment.End"" AdornmentIcon=""@PasswordInputIcon"" OnAdornmentClick=""ButtonTestclick"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField Label=""Amount"" Variant=""Variant.Outlined"" Adornment=""Adornment.Start"" AdornmentIcon=""@Icons.Material.AttachMoney"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField HelperText=""Weight"" Variant=""Variant.Outlined"" Adornment=""Adornment.End"" AdornmentText=""Kg"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField Label=""Password"" @bind-Value=""Password"" Variant=""Variant.Outlined"" InputType=""@PasswordInput"" Adornment=""Adornment.End"" AdornmentIcon=""@PasswordInputIcon"" OnAdornmentClick=""ButtonTestclick"" />
    </MudItem>
</MudGrid>


@code {
    string Password = ""superstrong123"";
    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.VisibilityOff;

    void ButtonTestclick()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else {
            isShow = true;
            PasswordInputIcon = Icons.Material.Visibility;
            PasswordInput = InputType.Text;
        }
    }
}";

public const string TextFieldBasicExample = @"<MudGrid>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField Label=""Standard"" Variant=""Variant.Text""></MudTextField>
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField Label=""Filled"" Variant=""Variant.Filled""></MudTextField>
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""4"">
        <MudTextField Label=""Outlined"" Variant=""Variant.Outlined""></MudTextField>
    </MudItem>
</MudGrid>";

public const string TextFieldFormPropsExample = @"<MudGrid>
    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""With Helper"" HelperText=""Some helping Text"" Variant=""Variant.Text"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""Disabled"" Variant=""Variant.Text"" Disabled=""true"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""Password"" InputType=""InputType.Password"" Variant=""Variant.Text"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""Read Only"" Value=""Can't change me"" ReadOnly=""true"" Variant=""Variant.Text"" />
    </MudItem>

    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""With Helper"" HelperText=""Some helping Text"" Variant=""Variant.Filled"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""Disabled"" Variant=""Variant.Filled"" Disabled=""true"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""Password"" InputType=""InputType.Password"" Variant=""Variant.Filled"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""Read Only"" Value=""Can't change me"" ReadOnly=""true"" Variant=""Variant.Filled"" />
    </MudItem>

    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""With Helper"" HelperText=""Some helping Text"" Variant=""Variant.Outlined"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""Disabled"" Variant=""Variant.Outlined"" Disabled=""true"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""Password"" InputType=""InputType.Password"" Variant=""Variant.Outlined"" />
    </MudItem>
    <MudItem xs=""12"" sm=""6"" md=""3"">
        <MudTextField Label=""Read Only"" Value=""Can't change me"" ReadOnly=""true"" Variant=""Variant.Outlined"" />
    </MudItem>
</MudGrid>";

public const string TextFieldInputsExample = @"<MudInput Value=""Basic Input"" />
<MudInput Placeholder=""Placeholder"" />
<MudInput Value=""Disabled"" Disabled=""true"" />
<MudInput Value=""Error"" Error=""true"" />";

public const string ThemesCustomExample = @"<MudThemeProvider Theme=""MyCoolDarkTheme"" />

@code {

    MudTheme MyCoolDarkTheme = new MudTheme()
    {
        Color_Primary = ""#304ffe"",
        Color_Secondary = ""#1de9b6"",
        Color_Surface = ""#282C34"",
        Color_Background = ""#1c2025"",
        Color_Text_Default = ""#e6e5e8""
    };
}";

public const string ThemesDefaultExample = @"<MudThemeProvider />";

public const string TooltipDelayedExample = @"<MudTooltip Text=""Delete"" Delayed=""true"">
    <MudIconButton Icon=""@Icons.Material.Delete"" />
</MudTooltip>
<MudTooltip Text=""Add"" Delayed=""true"">
    <MudFab Icon=""@Icons.Material.Add"" Color=""Color.Secondary"" />
</MudTooltip>";

public const string TooltipPostionExample = @"<MudTooltip Text=""Start/Left"" Placement=""Placement.Start"">
    <MudButton>Start/Left</MudButton>
</MudTooltip>
<MudTooltip Text=""Top"" Placement=""Placement.Top"">
    <MudButton>Top</MudButton>
</MudTooltip>
<MudTooltip Text=""Bottom"" Placement=""Placement.Bottom"">
    <MudButton>Bottom</MudButton>
</MudTooltip>
<MudTooltip Text=""End/Right"" Placement=""Placement.End"">
    <MudButton>End/Right</MudButton>
</MudTooltip>";

public const string TooltipSimpleExample = @"<MudTooltip Text=""Delete"">
    <MudIconButton Icon=""@Icons.Material.Delete"" />
</MudTooltip>
<MudTooltip Text=""Add"">
    <MudFab Icon=""@Icons.Material.Add"" Color=""Color.Secondary"" />
</MudTooltip>";

public const string TextAlignmentExample = @"<MudText Align=""Align.Left""><b>Left</b> Lorem ipsum dolor sit amet.</MudText>
<MudText Align=""Align.Right""><b>Right</b> Lorem ipsum dolor sit amet.</MudText>
<MudText Align=""Align.Center""><b>Center</b> Lorem ipsum dolor sit amet.</MudText>
<MudText Align=""Align.Justify""><b>Justify</b> Lorem ipsum dolor sit amet.</MudText>
<MudText Align=""Align.Inherit""><b>Inherit</b> Lorem ipsum dolor sit amet.</MudText>";

public const string TextGeneralExample = @"<MudText Typo=""Typo.h1"">h1. Heading</MudText>
<MudText Typo=""Typo.h2"">h2. Heading</MudText>
<MudText Typo=""Typo.h3"">h3. Heading</MudText>
<MudText Typo=""Typo.h4"">h4. Heading</MudText>
<MudText Typo=""Typo.h5"">h5. Heading</MudText>
<MudText Typo=""Typo.h6"">h6. Heading</MudText>
<MudText Typo=""Typo.subtitle1"">subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur</MudText>
<MudText Typo=""Typo.subtitle2"">subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur</MudText>
<MudText Typo=""Typo.body1"">body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.</MudText>
<MudText Typo=""Typo.body2"">body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.</MudText>
<MudText Typo=""Typo.button"">BUTTON TEXT</MudText>
<MudText Typo=""Typo.caption"">caption text</MudText>
<MudText Typo=""Typo.overline"">OVERLINE TEXT</MudText>";

public const string ColorsClassExample = @"<MudText>
    This is not set by any <strong class=""green-text text-accent-4"">MudTheme</strong> colors.
</MudText>
<MudText>
    But rather css classes based on <strong class=""purple-text text-accent-3"">Material Design</strong> color pallet.
</MudText>";

public const string ElevationUsageExample = @"<div class=""mud-elevation-0"">0</div>
<div class=""mud-elevation-1"">1</div>
<div class=""mud-elevation-2"">2</div>
<div class=""mud-elevation-3"">3</div>
<div class=""mud-elevation-4"">4</div>
<div class=""mud-elevation-5"">5</div>
<div class=""mud-elevation-6"">6</div>
<div class=""mud-elevation-7"">7</div>
<div class=""mud-elevation-8"">8</div>
<div class=""mud-elevation-9"">9</div>
<div class=""mud-elevation-10"">10</div>
<div class=""mud-elevation-11"">11</div>
<div class=""mud-elevation-12"">12</div>
<div class=""mud-elevation-13"">13</div>
<div class=""mud-elevation-14"">14</div>
<div class=""mud-elevation-15"">15</div>
<div class=""mud-elevation-16"">16</div>
<div class=""mud-elevation-17"">17</div>
<div class=""mud-elevation-18"">18</div>
<div class=""mud-elevation-19"">19</div>
<div class=""mud-elevation-20"">20</div>
<div class=""mud-elevation-21"">21</div>
<div class=""mud-elevation-22"">22</div>
<div class=""mud-elevation-23"">23</div>
<div class=""mud-elevation-24"">24</div>
<div class=""mud-elevation-99"">99</div>";

public const string SpacingExample = @"<MudPaper Class=""pa-6 mr-12"">
    <MudText Typo=""Typo.subtitle2"">pa-6 & mr-12</MudText>
</MudPaper>
<MudPaper Class=""pa-6"">
    <MudText Typo=""Typo.subtitle2"">pa-6</MudText>
</MudPaper>
<MudPaper Class=""px-4 py-1"">
    <MudText Typo=""Typo.subtitle2"">px-4 & py-1</MudText>
</MudPaper>
<MudPaper Class=""pa-6 ml-6"">
    <MudText Typo=""Typo.subtitle2"">pa-6 & ml-6</MudText>
</MudPaper>";

    }
}

