@namespace MudBlazor
@using MudBlazor.Utilities
@inherits MudBasePicker

<div class="@PickerClass">
    @if (PickerVariant != PickerVariant.Static)
    {
        <MudTextField Label="@Label" Value="@Value" HelperText="@HelperText" Variant="@InputVariant" ReadOnly="true" @onclick="ToggleOpen" Disabled="@Disabled" Adornment="@Adornment" AdornmentIcon="@InputIcon" IconSize="@IconSize" />
    }
    <CascadingValue Value="@this">
        <MudPaper @attributes="UserAttributes" Class="@PickerPaperClass" Elevation="@Elevation" Square="@Square">
            <div class="@PickerContainerClass">
                @ChildContent
            </div>
        </MudPaper>
    </CascadingValue>
</div>
@if (PickerVariant == PickerVariant.Inline)
{
    @if (isOpen)
    {
        <div class="mud-popover-overlay" @onclick="@Close"></div>
    }
}


@code {

    protected string PickerClass =>
        new CssBuilder("mud-picker")
           .AddClass($"mud-picker-inline", PickerVariant == PickerVariant.Inline)
           .AddClass($"mud-picker-static", PickerVariant == PickerVariant.Static)
           .AddClass($"mud-rounded", PickerVariant == PickerVariant.Static && !Square)
           .AddClass($"mud-elevation-{StaticElevation.ToString()}", PickerVariant == PickerVariant.Static)
           .AddClass($"mud-picker-input-button", !AllowKeyboardInput && PickerVariant != PickerVariant.Static)
           .AddClass($"mud-picker-input-text", AllowKeyboardInput && PickerVariant != PickerVariant.Static)
           .AddClass($"mud-disabled", Disabled && PickerVariant != PickerVariant.Static)
        .Build();

    protected string PickerPaperClass =>
    new CssBuilder("mud-picker-paper")
      .AddClass("mud-picker-view", PickerVariant == PickerVariant.Inline)
      .AddClass("mud-picker-open", isOpen && PickerVariant == PickerVariant.Inline)
      .AddClass("mud-picker-popover-paper", PickerVariant == PickerVariant.Inline)
    .Build();

    protected string PickerContainerClass =>
    new CssBuilder("mud-picker-container")
      .AddClass("mud-paper-square", Square)
      .AddClass("mud-picker-container-landscape", Orientation == Orientation.Landscape && PickerVariant == PickerVariant.Static)
    .Build();

    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter] public string InputIcon { get; set; }
    [Parameter] public string ToolBarClass { get; set; }

    private int StaticElevation;

    protected override void OnInitialized()
    {
        if (PickerVariant == PickerVariant.Static)
        {
            if (Elevation == 8)
            {
                StaticElevation = 0;
            }
            else
            {
                StaticElevation = Elevation;
            }
            Elevation = 0;

            if (!Rounded)
            {
                Square = true;
            }
        }
    }
}