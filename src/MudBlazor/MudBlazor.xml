<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MudBlazor</name>
    </assembly>
    <members>
        <member name="P:MudBlazor.MudBaseButton.ButtonType">
            <summary>
            The button Type (Button, Submit, Refresh)
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseButton.Link">
            <summary>
            If set to a URL, clicking the button will open the referenced document. Use Target to specify where
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseButton.Target">
            <summary>
            The target attribute specifies where to open the link, if Link is specified. Possible values: _blank | _self | _parent | _top | <i>framename</i>
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseButton.ForceLoad">
            <summary>
            If true, force browser to redirect outside component router-space.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseButton.Command">
            <summary>
            Command executed when the user clicks on an element.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseButton.CommandParameter">
            <summary>
            Command parameter.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseButton.OnClick">
            <summary>
            Button click event.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.Disabled">
            <summary>
            If true, the input element will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.ReadOnly">
            <summary>
            If true, the input will be read only.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.Error">
            <summary>
            If true, the label will be displayed in an error state.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.FullWidth">
            <summary>
            If true, the input will take up the full width of its container.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.DisableUnderLine">
            <summary>
            If true, the input will not have an underline.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.Label">
            <summary>
            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.Placeholder">
            <summary>
            The short hint displayed in the input before the user enters a value.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.HelperText">
            <summary>
            If string has value, helpertext will be applied.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.AdornmentIcon">
            <summary>
            Icon that will be used if Adornment is set to Start or End.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.AdornmentText">
            <summary>
            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.Adornment">
            <summary>
            Sets Start or End Adornment if not set to None.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.IconSize">
            <summary>
            Sets the Icon Size.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.OnAdornmentClick">
            <summary>
            Button click event if set and Adornment used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.InputType">
            <summary>
            Type of the input element. It should be a valid HTML5 input type.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.Variant">
            <summary>
            Variant to use.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.Margin">
            <summary>
             Will adjust vertical spacing. 
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.ValueChanged">
            <summary>
            Fired when the Value property changes. 
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseInputText.Value">
            <summary>
            The value of this input element. This property is two-way bindable.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.Elevation">
            <summary>
            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default in inline mode and 0 in static mode.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.Square">
            <summary>
            If true, border-radius is set to 0 this is set to true automaticly in static mode but can be overridden with Rounded bool.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.Rounded">
            <summary>
            If true, border-radius is set to theme default when in Static Mode.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.HelperText">
            <summary>
            If string has value, helpertext will be applied.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.Label">
            <summary>
            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.Disabled">
            <summary>
            If true, the picker will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.DisableToolbar">
            <summary>
            Hide toolbar and show only date/time views.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.PickerVariant">
            <summary>
            Picker container option
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.InputVariant">
            <summary>
            InputVariant, if Picker is static this option will not change anything.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.Adornment">
            <summary>
            Sets if the icon will be att start or end, set to false to disable.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.Orientation">
            <summary>
            What orientation to render in when in PickerVariant Static Mode.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.IconSize">
            <summary>
            Sets the Icon Size.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.Color">
            <summary>
            The color of the toolbar, selected and active. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.AllowKeyboardInput">
            <summary>
            Allows text input from keyboard.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.ValueChanged">
            <summary>
            Fired when the value changes.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBasePicker.Value">
            <summary>
            The currently selected value represented as a string (two-way bindable)
            </summary>
        </member>
        <member name="M:MudBlazor.MudBasePicker.StringValueChanged(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:MudBlazor.MudBaseSelectItem.Disabled">
            <summary>
            If true, the input element will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseSelectItem.DisableRipple">
            <summary>
            If true, disables ripple effect.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseSelectItem.Href">
            <summary>
            Link to a URL when clicked.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseSelectItem.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseSelectItem.CommandParameter">
            <summary>
            Command parameter.
            </summary>
        </member>
        <member name="P:MudBlazor.MudBaseSelectItem.Command">
            <summary>
            Command executed when the user clicks on an element.
            </summary>
        </member>
        <member name="P:MudBlazor.MudComponentBase.Class">
            <summary>
            User class names, separated by space
            </summary>
        </member>
        <member name="P:MudBlazor.MudComponentBase.Style">
            <summary>
            User styles, applied on top of the component's own classes and styles
            </summary>
        </member>
        <member name="P:MudBlazor.MudComponentBase.Tag">
            <summary>
            Use Tag to attach any user data object to the component for your convenience.
            </summary>
        </member>
        <member name="P:MudBlazor.MudComponentBase.UserAttributes">
            <summary>
            UserAttributes carries all attributes you add to the component that don't match any of its parameters. They
            will be splatted onto the underlying HTML tag.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAlert.Elevation">
            <summary>
            The higher the number, the heavier the drop-shadow. 0 for no shadow.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAlert.Square">
            <summary>
            If true, rounded corners are disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAlert.Dense">
            <summary>
            If true, compact padding will be used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAlert.NoIcon">
            <summary>
            If true, no alert icon will be used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAlert.Severity">
            <summary>
            The severity of the alert. This defines the color and icon used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAlert.Variant">
            <summary>
            The variant to use.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAlert.Class">
            <summary>
            User class names, separated by space.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAlert.ChildContent">
            <summary>
            Child content of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAppBar.Elevation">
            <summary>
            The higher the number, the heavier the drop-shadow. 0 for no shadow.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAppBar.Dense">
            <summary>
            If true, compact padding will be used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAppBar.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAppBar.Position">
            <summary>
            The positioning type. The behavior of the different options is described in the MDN web docs. Note: sticky is not universally supported and will fall back to static when unavailable.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAppBar.ChildContent">
            <summary>
            Child content of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudButton.StartIcon">
            <summary>
            Icon placed before the text if set.
            </summary>
        </member>
        <member name="P:MudBlazor.MudButton.EndIcon">
            <summary>
            Icon placed before the text if set.
            </summary>
        </member>
        <member name="P:MudBlazor.MudButton.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudButton.Size">
            <summary>
            The Size of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudButton.Variant">
            <summary>
            The variant to use.
            </summary>
        </member>
        <member name="P:MudBlazor.MudButton.Disabled">
            <summary>
            If true, the button will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudButton.DisableElevation">
            <summary>
            If true, no drop-shadow will be used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudButton.DisableRipple">
            <summary>
            If true, disables ripple effect.
            </summary>
        </member>
        <member name="P:MudBlazor.MudButton.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudFab.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudFab.Size">
            <summary>
            The Size of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudFab.Icon">
            <summary>
            If applied Icon will be added to the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudFab.Label">
            <summary>
            If applied the text will be added to the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudFab.Disabled">
            <summary>
            If true, the button will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudFab.DisableElevation">
            <summary>
            If true, no drop-shadow will be used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudFab.DisableRipple">
            <summary>
            If true, disables ripple effect.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIconButton.Icon">
            <summary>
            The Icon that will be used in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIconButton.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIconButton.Size">
            <summary>
            The Size of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIconButton.Edge">
            <summary>
            If set uses a negative margin.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIconButton.DisableRipple">
            <summary>
            If true, disables ripple effect.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIconButton.Disabled">
            <summary>
            If true, the button will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIconButton.ChildContent">
            <summary>
            Child content of component, only shows if Icon is null or Empty.
            </summary>
        </member>
        <member name="P:MudBlazor.MudChartBase.ChartType">
            <summary>
            The Type of the chart.
            </summary>
        </member>
        <member name="P:MudBlazor.MudChartBase.Width">
            <summary>
            The Width of the chart, end with % or px.
            </summary>
        </member>
        <member name="P:MudBlazor.MudChartBase.Height">
            <summary>
            The Height of the chart, end with % or px.
            </summary>
        </member>
        <member name="P:MudBlazor.MudChartBase.LegendDirection">
            <summary>
            The placment direction of the legend if used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudChartBase.DisplayLegendItemValues">
            <summary>
            If true, the Data Values will be displayed next to the Legend Labels.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCheckBox.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCheckBox.Label">
            <summary>
            If applied the text will be added to the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCheckBox.DisableRipple">
            <summary>
            If true, disables ripple effect.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCheckBox.Disabled">
            <summary>
            If true, the checkbox will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCheckBox.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCheckBox.CheckedChanged">
            <summary>
            A callback when CheckedChanges.
            </summary>
        </member>
        <member name="P:MudBlazor.MudChip.Color">
            <summary>
            The color of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudChip.Size">
            <summary>
            The size of the button. small is equivalent to the dense button styling.
            </summary>
        </member>
        <member name="P:MudBlazor.MudChip.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDatePicker.MaxDate">
            <summary>
            Max selectable date.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDatePicker.MinDate">
            <summary>
            Max selectable date.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDatePicker.OpenTo">
            <summary>
            First view to show in the MudDatePicker.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDatePicker.InputIcon">
            <summary>
            Sets the Input Icon.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDatePicker.Date">
            <summary>
            The currently selected date (two-way bindable). If null, then nothing was selected.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDatePicker.DateChanged">
            <summary>
            Fired when the date changes.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDatePicker.FirstDayOfWeek">
            <summary>
            Defines on which day the week starts. Depends on the value of Culture. 
            </summary>
        </member>
        <member name="P:MudBlazor.MudDatePicker.PickerMonth">
            <summary>
            The current month of the date picker (two-way bindable). This changes when the user browses through the calender.
            The month is represented as a DateTime which is always the first day of that month. You can also set this to define which month is initially shown. If not set, the current month is shown.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDatePicker.PickerMonthChanged">
            <summary>
            Fired when the date changes.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDatePicker.Culture">
            <summary>
            The display culture
            </summary>
        </member>
        <member name="P:MudBlazor.MudDatePicker.ClosingDelay">
            <summary>
            Milliseconds to wait before closing the picker. This helps the user see that the date was selected before the popover disappears.
            </summary>
        </member>
        <member name="F:MudBlazor.MudDatePicker.Picker">
            <summary>
            Reference to the Picker, initialized via @ref
            </summary>
        </member>
        <member name="M:MudBlazor.MudDatePicker.GetMonthStart">
            <summary>
            Get the first of the month to display
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.MudDatePicker.GetMonthEnd">
            <summary>
            Get the last of the month to display
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.MudDatePicker.GetWeek(System.Int32)">
            <summary>
            Gets the n-th week of the currently displayed month. 
            </summary>
            <param name="index">between 0 and 4</param>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.MudDatePicker.OnDayClicked(System.DateTime)">
            <summary>
            User clicked on a day
            </summary>
        </member>
        <member name="M:MudBlazor.MudDatePicker.GetAbbreviatedDayNames">
            <summary>
            return Mo, Tu, We, Th, Fr, Sa, Su in the right culture
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.MudDatePicker.Shift``1(``0[],System.Int32)">
            <summary>
            Shift array and cycle around from the end
            </summary>
        </member>
        <member name="F:MudBlazor.MudDatePicker._componentId">
            <summary>
            We need a random id for the year items in the year list so we can scroll to the item safely in every DatePicker.
            </summary>
        </member>
        <member name="F:MudBlazor.MudDatePicker._scrollToYearAfterRender">
            <summary>
            Is set to true to scroll to the actual year after the next render
            </summary>
        </member>
        <member name="P:MudBlazor.MudExpansionPanel.Text">
            <summary>
            The text to be displayed in the expansion panel.
            </summary>
        </member>
        <member name="P:MudBlazor.MudExpansionPanel.Disabled">
            <summary>
            If true, the component will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudExpansionPanel.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudExpansionPanels.Square">
            <summary>
            If true, border-radius is set to 0.
            </summary>
        </member>
        <member name="P:MudBlazor.MudExpansionPanels.MultiExpansion">
            <summary>
            If true, multiple panels can be expanded at the same time.
            </summary>
        </member>
        <member name="P:MudBlazor.MudExpansionPanels.Elevation">
            <summary>
            The higher the number, the heavier the drop-shadow. 0 for no shadow.
            </summary>
        </member>
        <member name="P:MudBlazor.MudExpansionPanels.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudForm.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudHidden.Breakpoint">
            <summary>
            The screen size(s) depending on which the ChildContent should not be rendered (or should be, if Invert is true)
            </summary>
        </member>
        <member name="P:MudBlazor.MudHidden.Invert">
            <summary>
            Inverts the Breakpoint, so that the ChildContent is only rendered when the breakpoint matches the screen size.
            </summary>
        </member>
        <member name="P:MudBlazor.MudHidden.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIcon.Icon">
            <summary>
            If set will display an SVG Icon.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIcon.FontIcon">
            <summary>
            If set will display Font Icon.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIcon.FontClass">
            <summary>
            Font Icon Class, only applies if Font Icon is used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIcon.Size">
            <summary>
            The Size of the icon.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIcon.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudIcon.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudInputControl.Label">
            <summary>
            If string has value, label text will be added.
            </summary>
        </member>
        <member name="P:MudBlazor.MudInputControl.FullWidth">
            <summary>
            If true, the component will take up the full width of its container.
            </summary>
        </member>
        <member name="P:MudBlazor.MudInputControl.HelperText">
            <summary>
            If string has value, helpertext will be applied.
            </summary>
        </member>
        <member name="P:MudBlazor.MudInputControl.Margin">
            <summary>
            	If dense or normal, will adjust vertical spacing of this and contained components.
            </summary>
        </member>
        <member name="P:MudBlazor.MudInputControl.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudInputLabel.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudLink.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudLink.Typo">
            <summary>
            Typography variant to use.
            </summary>
        </member>
        <member name="P:MudBlazor.MudLink.Underline">
            <summary>
            Controls when the link should have an underline.
            </summary>
        </member>
        <member name="P:MudBlazor.MudLink.Href">
            <summary>
            The URL, which is the actual link.
            </summary>
        </member>
        <member name="P:MudBlazor.MudLink.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudList.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudList.Clickable">
            <summary>
            Determens if the List will have clickable items.
            </summary>
        </member>
        <member name="P:MudBlazor.MudList.DisablePadding">
            <summary>
            If true, vertical padding will be removed from the list.
            </summary>
        </member>
        <member name="P:MudBlazor.MudList.Dense">
            <summary>
            If true, compact vertical padding will be applied to all list items.
            </summary>
        </member>
        <member name="P:MudBlazor.MudList.DisableGutters">
            <summary>
            If true, the left and right padding is removed on all list items.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.Avatar">
            <summary>
            Avatar to use if set.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.Href">
            <summary>
            Link to a URL when clicked.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.AvatarClass">
            <summary>
            Avatar CSS Class to applie if Avtar is set.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.DisableRipple">
            <summary>
            If true, disables ripple effect.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.Icon">
            <summary>
            Icon to use if set.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.Inset">
            <summary>
            If true, the List Subheader will be indented.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.Dense">
            <summary>
            If true, compact vertical padding will be used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.DisableGutters">
            <summary>
            If true, the left and right padding is removed.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.Expanded">
            <summary>
            If Nested list and If Expanded true expands the nested list, otherwise collapse it.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.CommandParameter">
            <summary>
            Command parameter.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.Command">
            <summary>
            Command executed when the user clicks on an element.
            </summary>
        </member>
        <member name="P:MudBlazor.MudListItem.OnClick">
            <summary>
            List click event.
            </summary>
        </member>
        <member name="P:MudBlazor.MudPopover.Elevation">
            <summary>
            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 8 by default.
            </summary>
        </member>
        <member name="P:MudBlazor.MudPopover.Square">
            <summary>
            If true, border-radius is set to 0.
            </summary>
        </member>
        <member name="P:MudBlazor.MudPopover.MaxHeight">
            <summary>
            Sets the maxheight the popover can have when open.
            </summary>
        </member>
        <member name="P:MudBlazor.MudPopover.Open">
            <summary>
            If true, the popover is visible.
            </summary>
        </member>
        <member name="P:MudBlazor.MudPopover.ChildContent">
            <summary>
            Child content of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudRadio.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudRadio.Placement">
            <summary>
            The position of the label.
            </summary>
        </member>
        <member name="P:MudBlazor.MudRadio.Label">
            <summary>
            The text/label will be displayed next to the switch if set.
            </summary>
        </member>
        <member name="P:MudBlazor.MudRadio.DisableRipple">
            <summary>
            If true, disables ripple effect.
            </summary>
        </member>
        <member name="P:MudBlazor.MudRadio.Disabled">
            <summary>
            If true, the button will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudRadio.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelect.ChildContent">
            <summary>
            Add the MudSelectItems here
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelect.Dense">
            <summary>
            If true, compact vertical padding will be applied to all select items.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelect.OpenIcon">
            <summary>
            The Open Select Icon
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelect.CloseIcon">
            <summary>
            The Open Select Icon
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelect.SelectedValuesChanged">
            <summary>
            Fires when SelectedValues changes.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelect.SelectedValues">
            <summary>
            Set of selected values. If MultiSelection is false it will only ever contain a single value. This property is two-way bindable.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelect.MultiSelection">
            <summary>
            If true, multiple values can be selected via checkboxes which are automatically shown in the dropdown
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelect.MaxHeight">
            <summary>
            Sets the maxheight the select can have when open.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelect.Direction">
            <summary>
            Sets the direction the select menu should be.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelect.OffsetY">
            <summary>
            If true, the select menu will open either before or after the input.
            </summary>
        </member>
        <member name="T:MudBlazor.MudSelectItem">
            <summary>
            Represents an option of a select or multi-select. To be used inside MudSelect.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelectItem.MudSelect">
            <summary>
            The parent select component
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelectItem.Value">
            <summary>
            A user-defined option that can be selected
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelectItem.MultiSelection">
            <summary>
            Mirrors the MultiSelection status of the parent select
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelectItem.IsSelected">
            <summary>
            Selected state of the option. Only works if the parent is a mulit-select
            </summary>
        </member>
        <member name="P:MudBlazor.MudSelectItem.CheckBoxIcon">
            <summary>
            The checkbox icon reflects the multi-select option's state
            </summary>
        </member>
        <member name="P:MudBlazor.MudSlider.Min">
            <summary>
            The minimum allowed value of the slider. Should not be equal to max.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSlider.Max">
            <summary>
            The maximum allowed value of the slider. Should not be equal to min.
            </summary>
            
        </member>
        <member name="P:MudBlazor.MudSlider.Step">
            <summary>
            How many steps the slider should take on eatch move.
            </summary>
            
        </member>
        <member name="P:MudBlazor.MudSlider.Disabled">
            <summary>
            If true, the slider will be disabled.
            </summary>
            
        </member>
        <member name="P:MudBlazor.MudSlider.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="T:MudBlazor.Snackbars">
            <inheritdoc />
        </member>
        <member name="P:MudBlazor.MudSwitch.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSwitch.Label">
            <summary>
            The text/label will be displayed next to the switch if set.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSwitch.DisableRipple">
            <summary>
            If true, disables ripple effect.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSwitch.Disabled">
            <summary>
            If true, the switch will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSimpleTable.Elevation">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSimpleTable.Hover">
            <summary>
            If true, the table row will shade on hover.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSimpleTable.Square">
            <summary>
            If true, border-radius is set to 0.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSimpleTable.Dense">
            <summary>
            If true, compact padding will be used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSimpleTable.Outlined">
            <summary>
            If true, card will be outlined.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSimpleTable.ChildContent">
            <summary>
            Child content of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.Elevation">
            <summary>
            The higher the number, the heavier the drop-shadow. 0 for no shadow.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.Square">
            <summary>
            Set true to disable rounded corners
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.Dense">
            <summary>
            Set true for rows with a narrow height
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.Hover">
            <summary>
            Set true to see rows hover on mouse-over.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.FixedHeader">
            <summary>
            When true, the header will stay in place when the table is scrolled. Note: set Height to make the table scrollable.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.Height">
            <summary>
            Setting a height will allow to scroll the table. If not set, it will try to grow in height. You can set this to any CSS value that the
            attribute 'height' accepts, i.e. 500px. 
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.RowsPerPage">
            <summary>
            If the table has more items than this number, it will break the rows into pages of said size.
            Note: requires a MudTablePager in PagerContent.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.CurrentPage">
            <summary>
            The page index of the currently displayed page. Usually called by MudTablePager.
            Note: requires a MudTablePager in PagerContent.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.MultiSelection">
            <summary>
            Set to true to enable selection of multiple rows with check boxes. 
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.ToolBarContent">
            <summary>
            Optional. Add any kind of toolbar to this render fragment.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.HeaderContent">
            <summary>
            Add MudTh cells here to define the table header.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTableBase.PagerContent">
            <summary>
            Add MudTablePager here to enable breaking the rows in to multiple pages.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTablePager.DisableRowsPerPage">
            <summary>
            Set true to hide the part of the pager which allows to change the page size.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTablePager.PageSizeOptions">
            <summary>
            Define a list of available page size options for the user to choose from
            </summary>
        </member>
        <member name="P:MudBlazor.MudTablePager.InfoFormat">
            <summary>
            Format string for the display of the current page, which you can localize to your language. Available variables are:
            {first_item}, {last_item} and {all_items} which will replaced with the indices of the page's first and last item as well as the total number of items.
            Default: "{first_item}-{last_item} of {all_items}" which is transformed into "0-25 of 77". 
            </summary>
        </member>
        <member name="P:MudBlazor.MudTablePager.RowsPerPageString">
            <summary>
            The localizable "Rows per page:" text.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTabs.Rounded">
            <summary>
            If true, sets the border-radius to theme default.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTabs.Border">
            <summary>
            If true, sets a border.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTabs.Centered">
            <summary>
            If true, centers the tabitems.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTabs.Vertical">
            <summary>
            If true, displays the MudTabs verticaly.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTabs.Elevation">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTabs.DisableRipple">
            <summary>
            If true, disables ripple effect.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTabs.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudText.Typo">
            <summary>
            Applies the theme typography styles.
            </summary>
        </member>
        <member name="P:MudBlazor.MudText.Align">
            <summary>
            Set the text-align on the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudText.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudText.GutterBottom">
            <summary>
            If true, the text will have a bottom margin.
            </summary>
        </member>
        <member name="P:MudBlazor.MudText.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudText.Inline">
            <summary>
            If true, Sets display inine
            </summary>
        </member>
        <member name="T:MudBlazor.Breakpoint">
            <summary>
            Breakpoints describe certain user interfaces sizes or ranges. Use them in conjunction with MudHidden or ResizeListenerService
            </summary>
        </member>
        <member name="T:MudBlazor.Services.ResizeListenerService">
            <summary>
            This service listens to browser resize events and allows you to react to a changing window size in Blazor
            </summary>
        </member>
        <member name="M:MudBlazor.Services.ResizeListenerService.#ctor(Microsoft.JSInterop.IJSRuntime,Microsoft.Extensions.Options.IOptions{MudBlazor.Services.ResizeOptions})">
            <summary>
            
            </summary>
            <param name="jsRuntime"></param>
            <param name="options"></param>
        </member>
        <member name="E:MudBlazor.Services.ResizeListenerService.OnResized">
            <summary>
            Subscribe to the browsers resize() event.
            </summary>
        </member>
        <member name="M:MudBlazor.Services.ResizeListenerService.MatchMedia(System.String)">
            <summary>
            Determine if the Document matches the provided media query.
            </summary>
            <param name="mediaQuery"></param>
            <returns>Returns true if matched.</returns>
        </member>
        <member name="M:MudBlazor.Services.ResizeListenerService.GetBrowserWindowSize">
            <summary>
            Get the current BrowserWindowSize, this includes the Height and Width of the document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Services.ResizeListenerService.RaiseOnResized(MudBlazor.Services.BrowserWindowSize)">
            <summary>
            Invoked by jsInterop, use the OnResized event handler to subscribe.
            </summary>
            <param name="browserWindowSize"></param>
        </member>
        <member name="P:MudBlazor.Services.ResizeOptions.ReportRate">
            <summary>
            Rate in milliseconds that the browsers `resize()` event should report a change.
            Setting this value too low can cause poor application performance.
            </summary>
        </member>
        <member name="P:MudBlazor.Services.ResizeOptions.EnableLogging">
            <summary>
            Report resize events and media queries in the browser's console.
            </summary>
        </member>
        <member name="P:MudBlazor.Services.ResizeOptions.SuppressInitEvent">
            <summary>
            Suppress the first OnResized that is invoked when a new event handler is added.
            </summary>
        </member>
        <member name="M:MudBlazor.Services.ServiceCollectionExtensions.AddMudBlazorResizeListener(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{MudBlazor.Services.ResizeOptions})">
            <summary>
            Adds a ResizeListener as a Scoped instance.
            </summary>
            <param name="configure">Defines settings for this instance.</param>
            <returns>Continues the IServiceCollection chain.</returns>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.Default(System.String)">
            <summary>
            Creates a CssBuilder used to define conditional CSS classes used in a component.
            Call Build() to return the completed CSS Classes as a string. 
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.Empty">
            <summary>
            Creates an Empty CssBuilder used to define conditional CSS classes used in a component.
            Call Build() to return the completed CSS Classes as a string. 
            </summary>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.#ctor(System.String)">
            <summary>
            Creates a CssBuilder used to define conditional CSS classes used in a component.
            Call Build() to return the completed CSS Classes as a string. 
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.AddValue(System.String)">
            <summary>
            Adds a raw string to the builder that will be concatenated with the next class or value added to the builder.
            </summary>
            <param name="value"></param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.AddClass(System.String)">
            <summary>
            Adds a CSS Class to the builder with space separator.
            </summary>
            <param name="value">CSS Class to add</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.AddClass(System.String,System.Boolean)">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.AddClass(System.String,System.Nullable{System.Boolean})">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">CSS Class to conditionally add.</param>
            <param name="when">Nullable condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.AddClass(System.String,System.Func{System.Boolean})">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.AddClass(System.Func{System.String},System.Boolean)">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">Function that returns a CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.AddClass(System.Func{System.String},System.Func{System.Boolean})">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">Function that returns a CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.AddClass(MudBlazor.Utilities.CssBuilder,System.Boolean)">
            <summary>
            Adds a conditional nested CssBuilder to the builder with space separator.
            </summary>
            <param name="value">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.AddClass(MudBlazor.Utilities.CssBuilder,System.Func{System.Boolean})">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.AddClassFromAttributes(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Adds a conditional CSS Class when it exists in a dictionary to the builder with space separator.
            Null safe operation.
            </summary>
            <param name="additionalAttributes">Additional Attribute splat parameters</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.CssBuilder.Build">
            <summary>
            Finalize the completed CSS Classes as a string.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.Default(System.String,System.String)">
            <summary>
            Creates a StyleBuilder used to define conditional in-line style used in a component. Call Build() to return the completed style as a string.
            </summary>
            <param name="prop"></param>
            <param name="value"></param>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.Default(System.String)">
            <summary>
            Creates a StyleBuilder used to define conditional in-line style used in a component. Call Build() to return the completed style as a string.
            </summary>
            <param name="prop"></param>
            <param name="value"></param>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.Empty">
            <summary>
            Creates a StyleBuilder used to define conditional in-line style used in a component. Call Build() to return the completed style as a string.
            </summary>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.#ctor(System.String,System.String)">
            <summary>
            Creates a StyleBuilder used to define conditional in-line style used in a component. Call Build() to return the completed style as a string.
            </summary>
            <param name="prop"></param>
            <param name="value"></param>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddStyle(System.String)">
            <summary>
            Adds a conditional in-line style to the builder with space separator and closing semicolon.
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddRaw(System.String)">
            <summary>
            Adds a raw string to the builder that will be concatenated with the next style or value added to the builder.
            </summary>
            <param name="prop"></param>
            <param name="value"></param>
            <returns>StyleBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddStyle(System.String,System.String)">
            <summary>
            Adds a conditional in-line style to the builder with space separator and closing semicolon..
            </summary>
            <param name="prop"></param>
            <param name="value">Style to add</param>
            <returns>StyleBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddStyle(System.String,System.String,System.Boolean)">
            <summary>
            Adds a conditional in-line style to the builder with space separator and closing semicolon..
            </summary>
            <param name="prop"></param>
            <param name="value">Style to conditionally add.</param>
            <param name="when">Condition in which the style is added.</param>
            <returns>StyleBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddStyle(System.String,System.Func{System.String},System.Boolean)">
            <summary>
            Adds a conditional in-line style to the builder with space separator and closing semicolon..
            </summary>
            <param name="prop"></param>
            <param name="value">Style to conditionally add.</param>
            <param name="when">Condition in which the style is added.</param>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddStyle(System.String,System.String,System.Func{System.Boolean})">
            <summary>
            Adds a conditional in-line style to the builder with space separator and closing semicolon..
            </summary>
            <param name="prop"></param>
            <param name="value">Style to conditionally add.</param>
            <param name="when">Condition in which the style is added.</param>
            <returns>StyleBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddStyle(System.String,System.Func{System.String},System.Func{System.Boolean})">
            <summary>
            Adds a conditional in-line style to the builder with space separator and closing semicolon..
            </summary>
            <param name="prop"></param>
            <param name="value">Style to conditionally add.</param>
            <param name="when">Condition in which the style is added.</param>
            <returns>StyleBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddStyle(MudBlazor.Utilities.StyleBuilder)">
            <summary>
            Adds a conditional nested StyleBuilder to the builder with separator and closing semicolon.
            </summary>
            <param name="builder">Style Builder to conditionally add.</param>
            <returns>StyleBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddStyle(MudBlazor.Utilities.StyleBuilder,System.Boolean)">
            <summary>
            Adds a conditional nested StyleBuilder to the builder with separator and closing semicolon.
            </summary>
            <param name="builder">Style Builder to conditionally add.</param>
            <param name="when">Condition in which the style is added.</param>
            <returns>StyleBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddStyle(MudBlazor.Utilities.StyleBuilder,System.Func{System.Boolean})">
            <summary>
            Adds a conditional in-line style to the builder with space separator and closing semicolon..
            </summary>
            <param name="builder">Style Builder to conditionally add.</param>
            <param name="when">Condition in which the styles are added.</param>
            <returns>StyleBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddStyle(System.String,System.Action{MudBlazor.Utilities.ValueBuilder},System.Boolean)">
            <summary>
            Adds a conditional in-line style to the builder with space separator and closing semicolon..
            A ValueBuilder action defines a complex set of values for the property.
            </summary>
            <param name="prop"></param>
            <param name="builder"></param>
            <param name="when"></param>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.AddStyleFromAttributes(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Adds a conditional in-line style when it exists in a dictionary to the builder with separator.
            Null safe operation.
            </summary>
            <param name="additionalAttributes">Additional Attribute splat parameters</param>
            <returns>StyleBuilder</returns>
        </member>
        <member name="M:MudBlazor.Utilities.StyleBuilder.Build">
            <summary>
            Finalize the completed Style as a string.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:MudBlazor.Utilities.ValueBuilder.AddValue(System.String,System.Boolean)">
            <summary>
            Adds a space separated conditional value to a property.
            </summary>
            <param name="value"></param>
            <param name="when"></param>
            <returns></returns>
        </member>
        <member name="P:MudBlazor.MudAvatar.Square">
            <summary>
            If true, border-radius is set to 0.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAvatar.Rounded">
            <summary>
            If true, border-radius is set to the themes default value.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAvatar.Image">
            <summary>
            Link to image, if set a image will be displayed instead of text.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAvatar.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAvatar.Size">
            <summary>
            The Size of the MudAvatar.
            </summary>
        </member>
        <member name="P:MudBlazor.MudAvatar.ChildContent">
            <summary>
            Child content of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCard.Elevation">
            <summary>
            The higher the number, the heavier the drop-shadow. 0 for no shadow.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCard.Square">
            <summary>
            If true, border-radius is set to 0.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCard.Outlined">
            <summary>
            If true, card will be outlined.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCard.ChildContent">
            <summary>
            Child content of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCardActions.ChildContent">
            <summary>
            Child content of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCardContent.ChildContent">
            <summary>
            Child content of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCardHeader.CardHeaderAvatar">
            <summary>
            If used renders child content of the CardHeaderAvatar.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCardHeader.CardHeaderContent">
            <summary>
            If used renders child content of the CardHeaderContent.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCardHeader.CardHeaderActions">
            <summary>
            If used renders child content of the CardHeaderActions.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCollapse.Expanded">
            <summary>
            If true, expands the panel, otherwise collapse it. Setting this prop enables control over the panel.
            </summary>
        </member>
        <member name="P:MudBlazor.MudCollapse.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudContainer.Fixed">
            <summary>
            Set the max-width to match the min-width of the current breakpoint. This is useful if you'd prefer to design for a fixed set of sizes instead of trying to accommodate a fully fluid viewport. It's fluid by default.
            </summary>
        </member>
        <member name="P:MudBlazor.MudContainer.MaxWidth">
            <summary>
            Determine the max-width of the container. The container width grows with the size of the screen. Set to false to disable maxWidth.
            </summary>
        </member>
        <member name="P:MudBlazor.MudContainer.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDivider.Absolute">
            <summary>
            Sets absolute postion to the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDivider.FlexItem">
            <summary>
            If true, a vertical divider will have the correct height when used in flex container.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDivider.Light">
            <summary>
            If true, the divider will have a lighter color.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDivider.Vertical">
            <summary>
            If true, the divider is displayed vertically.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDivider.DividerType">
            <summary>
            The Divider type to use.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDrawer.Elevation">
            <summary>
            The higher the number, the heavier the drop-shadow. 0 for no shadow.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDrawer.Anchor">
            <summary>
            Side from which the drawer will appear.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDrawer.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDrawer.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDrawerHeader.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudDrawerHeader.LinkToIndex">
            <summary>
            If true, the component will link to index page with an a element instead of div.
            </summary>
        </member>
        <member name="P:MudBlazor.MudLayout.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudLayout.DrawerOpen">
            <summary>
            Gets or ets the drawer open state.
            </summary>
        </member>
        <member name="P:MudBlazor.MudLayout.DrawerClipped">
            <summary>
            Gets or sets the drawer clipped state.
            </summary>
        </member>
        <member name="P:MudBlazor.MudPaper.Elevation">
            <summary>
            The higher the number, the heavier the drop-shadow. 0 for no shadow set to 1 by default.
            </summary>
        </member>
        <member name="P:MudBlazor.MudPaper.Square">
            <summary>
            If true, border-radius is set to 0.
            </summary>
        </member>
        <member name="P:MudBlazor.MudPaper.Outlined">
            <summary>
            If true, card will be outlined.
            </summary>
        </member>
        <member name="P:MudBlazor.MudPaper.ChildContent">
            <summary>
            Child content of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudProgressCircular.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudProgressCircular.Size">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudProgressLinear.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudProgressLinear.Size">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSkeleton.Width">
            <summary>
            With defined in string, needs px or % or equal prefix.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSkeleton.Height">
            <summary>
            Height defined in string, needs px or % or equal prefix.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSkeleton.SkeletonType">
            <summary>
            Shape of the skeleton that will be renderd.
            </summary>
        </member>
        <member name="P:MudBlazor.MudSkeleton.Animation">
            <summary>
            Animation style, if false it will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTable`1.RowTemplate">
            <summary>
            Defines how a table row looks like. Use MudTd to define the table cells and their content.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTable`1.Items">
            <summary>
            The data to display in the table. MudTable will render one row per item
            </summary>
        </member>
        <member name="P:MudBlazor.MudTable`1.Filter">
            <summary>
            A function that returns whether or not an item should be displayed in the table. You can use this to implement your own search function.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTable`1.SelectedItem">
            <summary>
            Returns the item which was last clicked on in single selection mode (that is, if MultiSelection is false)
            </summary>
        </member>
        <member name="P:MudBlazor.MudTable`1.SelectedItemChanged">
            <summary>
            Callback is called when a row has been clicked and returns the selected item.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTable`1.SelectedItems">
            <summary>
            If MultiSelection is true, this returns the currently selected items. You can bind this property and the initial content of the HashSet you bind it to will cause these rows to be selected initially.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTable`1.SelectedItemsChanged">
            <summary>
            Callback is called whenever items are selected or deselected in multi selection mode.
            </summary>
        </member>
        <member name="M:MudBlazor.MudTableSortLabel`1.SetSortDirection(MudBlazor.SortDirection)">
            <summary>
            Set sort direction but don't update Table sort order. This should only be called by Table
            </summary>
        </member>
        <member name="P:MudBlazor.MudTabPanel.Text">
            <summary>
            Text will be displayed in the TabPanel as TabTitle.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTabPanel.Icon">
            <summary>
            Icon placed before the text if set.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTabPanel.Disabled">
            <summary>
            If true, the tabpanel will be disabled.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTabPanel.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudToolBar.Dense">
            <summary>
            If true, compact padding will be used.
            </summary>
        </member>
        <member name="P:MudBlazor.MudToolBar.DisableGutters">
            <summary>
            If true, disables gutter padding.
            </summary>
        </member>
        <member name="P:MudBlazor.MudToolBar.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTooltip.Text">
            <summary>
            Sets the text to be displayed inside the tooltip.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTooltip.Class">
            <summary>
            User class names, separated by space
            </summary>
        </member>
        <member name="P:MudBlazor.MudTooltip.Delayed">
            <summary>
            If true, sets set a delay until tooltip is showed.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTooltip.Placement">
            <summary>
            Tooltip placement.
            </summary>
        </member>
        <member name="P:MudBlazor.MudTooltip.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
    </members>
</doc>
