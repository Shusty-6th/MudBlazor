@* Auto-generated markup. Any changes will be overwritten *@
@namespace MudBlazor.Docs.Examples.Markup
<div class="mud-codeblock">
<div class="html"><pre>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudChart</span> <span class="htmlAttributeName">ChartSeries</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="sharpVariable"><span class="atSign">&#64;</span>Series</span><span class="quot">&quot;</span> <span class="htmlAttributeName">ChartType</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">ChartType</span><span class="enumValue">.Line</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span><span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudChart</span><span class="htmlTagDelimiter">&gt;</span>
</pre></div>
<div class="csharp"><pre>
<span class="atSign">&#64;</span>code {

    <span class="keyword">public</span> List&lt;ChartSeries&gt; Series = <span class="keyword">new</span> List&lt;ChartSeries&gt;();

    <span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> OnInitialized()
    {
        <span class="keyword">int</span>[] mySerieData1 = { <span class="number">10</span>, <span class="number">41</span>, <span class="number">35</span>, <span class="number">51</span>, <span class="number">49</span>, <span class="number">62</span>, <span class="number">69</span>, <span class="number">91</span>, <span class="number">148</span> };
        <span class="keyword">int</span>[] mySerieData2 = { <span class="number">90</span>, <span class="number">79</span>, <span class="number">72</span>, <span class="number">69</span>, <span class="number">62</span>, <span class="number">62</span>, <span class="number">55</span>, <span class="number">65</span>, <span class="number">70</span> };

        ChartSeries Serie1 = <span class="keyword">new</span> ChartSeries() { Name = <span class="string">&quot;Serie 1&quot;</span>, Data = mySerieData1 };
        Series.Add(Serie1);

        ChartSeries Serie2 = <span class="keyword">new</span> ChartSeries() { Name = <span class="string">&quot;Serie 2&quot;</span>, Data = mySerieData2 };
        Series.Add(Serie2);
    }
}
</pre></div>
</div>
